[{"path":"https://dipterix.org/bidsr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 bidsr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dipterix.org/bidsr/Roadmap.html","id":"road-maps","dir":"","previous_headings":"","what":"Road-maps","title":"NA","text":"Currently heading towards milestone: 2","code":""},{"path":"https://dipterix.org/bidsr/Roadmap.html","id":"milestone-1-define-bids-classes","dir":"","previous_headings":"Road-maps","what":"Milestone 1: Define BIDS classes","title":"NA","text":"R S7 base classes properties tabular data JSON side-car BIDS entity BIDS entity collection dataset_description.json README CITATION.cff, CHANGES, LICENSE participants.tsv, participants.json samples.tsv, samples.json phenotype/ Scans file Sessions file Query files data type subject","code":""},{"path":"https://dipterix.org/bidsr/Roadmap.html","id":"milestone-2-comprehensive-file-look-upquery","dir":"","previous_headings":"Road-maps","what":"Milestone 2: Comprehensive file look-up/query","title":"NA","text":"JSON format .tsv .csv format .nii, .gii .mat, .edf, … (electrophysiology) Get top-level files Analyze list subject data types resolve basic BIDS URI Query project, find side-car meta-data information using BIDS inheritance principle Parse BIDS schema automatically Use BIDS schema generate file entity rules dynamically","code":""},{"path":"https://dipterix.org/bidsr/Roadmap.html","id":"milestone-3-dynamic-file-handlers","dir":"","previous_headings":"Road-maps","what":"Milestone 3: Dynamic file handlers","title":"NA","text":"Provide handler registry access process data files Incorporate package ieegio provide default file handlers incorporate project RAVE rewire paths BIDS paths)","code":""},{"path":[]},{"path":[]},{"path":"https://dipterix.org/bidsr/articles/aaa-get-started.html","id":"overview-of-a-bids-project","dir":"Articles","previous_headings":"","what":"Overview of a BIDS project","title":"Get Started","text":"Let’s inspect project ds000117 official BIDS example repository:","code":"project_path <- file.path(example_root, \"ds000117\") project <- bids_project(path = project_path)  print(project) #> <ds000117>[BIDSProject] at: #>   /home/runner/.cache/R/bidsr/bids-examples/bids-examples-master/ds000117 #>   - raw-data path: . #>   - source-data path: sourcedata #>   - derivative path: derivatives #> +- Descriptions: --------------------------------------------------------------- #> | This dataset was obtained from the OpenNeuro project #> | (https://www.openneuro.org). Accession #: ds000117 #> |  #> | The same dataset is also available here: #> | ftp://ftp.mrc-cbu.cam.ac.uk/personal/rik.henson/wakemandg_hensonrn/, but in #> | a non-BIDS format (which may be easier to download by subject rather than #> | by modality) #> |  #> | Note that it is a subset of the data available on OpenfMRI #> | (http://www.openfmri.org; Accession #: ds000117). #> |  #> | Description: Multi-subject, multi-modal (sMRI+fMRI+MEG+EEG) neuroimaging #> | dataset on face processing #> |  #> | Please cite the following reference if you use these data: #> |  #> | Wakeman, D.G. & Henson, R.N. (2015). A multi-subject, multi-modal human #> | neuroimaging dataset. Sci. Data 2:150001 doi: 10.1038/sdata.2015.1 #> |  #> | The data have been used in several publications including, for example: #> |  #> | Henson, R.N., Abdulrahman, H., Flandin, G. & Litvak, V. (2019). Multimodal #> | integration of M/EEG and f/MRI data in SPM12. Frontiers in Neuroscience, #> | Methods, 13, 300. #> |  #> | Henson, R.N., Wakeman, D.G., Litvak, V. & Friston, K.J. (2011). A #> | Parametric Empirical Bayesian framework for the EEG/MEG inverse problem: #> | generative models for multisubject and multimodal integration. Frontiers in #> | Human Neuroscience, 5, 76, 1-16. #> |  #> | Chapter 42 of the SPM12 manual #> | (http://www.fil.ion.ucl.ac.uk/spm/doc/manual.pdf) #> |  #> | (see #> | ftp://ftp.mrc-cbu.cam.ac.uk/personal/rik.henson/wakemandg_hensonrn/Publications #> | for full list), as well as the BioMag2010 data competition and the Kaggle #> | competition: https://www.kaggle.com/c/decoding-the-human-brain) #> |  #> | ================================================================================== #> |  #> | func/ ----- Unlike in v1-v3 of this dataset, the first two (dummy) volumes #> | have now been removed (as stated in *.json), so event onset times correctly #> | refer to t=0 at start of third volume #> |  #> | Note that, owing to scanner error, Subject 10 only has 170 volumes in last #> | run (Run 9) (hence the BIDS warning of some onsets in events.tsv file being #> | later than the data) #> |  #> | meg/ ---- Three anatomical fiducials were digitized for aligning the MEG #> | with the MRI: the nasion (lowest depression between the eyes) and the left #> | and right ears (lowest depression between the tragus and the helix, above #> | the tragus). This procedure is illustrated here: #> | http://neuroimage.usc.edu/brainstorm/CoordinateSystems#Subject_Coordinate_System_.28SCS_.2F_CTF.29 #> | and in task-facerecognition_fidinfo.pdf #> |  #> | The following triggers are included in the .fif files and are also used in #> | the “trigger” column of the meg and bold events files: #> |  #> | Trigger Label Simplified Label #> |  #> | 5 Initial Famous Face FAMOUS 6 Immediate Repeat Famous Face FAMOUS 7 #> | Delayed Repeat Famous Face FAMOUS 13 Initial Unfamiliar Face UNFAMILIAR 14 #> | Immediate Repeat Unfamiliar Face UNFAMILIAR 15 Delayed Repeat Unfamiliar #> | Face UNFAMILIAR 17 Initial Scrambled Face SCRAMBLED 18 Immediate Repeat #> | Scrambled Face SCRAMBLED 19 Delayed Repeat Scrambled Face SCRAMBLED #> |  #> | stimuli/meg/ ------------ The .bmp files correspond to those described in #> | the text. There are 6 additional images in this directory, which were used #> | in the practice experiment to familiarize participants with the task (hence #> | some more BIDS validator warnings) #> |  #> | stimuli/mri/ ------------ The .bmp files correspond to those described in #> | the text. #> |  #> | Defacing -------- Defacing of MPRAGE T1 images was performed by the #> | submitter. A subset of subjects have given consent for non-defaced versions #> | to be shared - in which case, please contact rik.henson@mrc-cbu.cam.ac.uk. #> |  #> | Quality Control --------------- Mriqc was run on the dataset. Results are #> | located in derivatives/mriqc. Learn more about it here: #> | https://mriqc.readthedocs.io/en/latest/ #> |  #> | Known Issues ------------ N/A #> |  #> | Relationship of Subject Numbering relative to other versions of Dataset #> | ------------ #> |  #> | There are multiple versions of the dataset available on the web (see notes #> | above), and these entailed a renumbering of the subjects for various #> | reasons. Here are all the versions and how to match subjects between them #> | (plus some rationale and history for different versions): #> |  #> | 1. Original Paper (N=19): Wakeman & Henson (2015): doi:10.1038/sdata.2015.1 #> | Number refers to order that tested (and some, eg 4, 7, 13 etc were excluded #> | for not completing both MRI and MEG sessions) #> |  #> | 2. openfMRI, renumbered from paper: #> | http://openfmri.org/s3-browser/?prefix=ds000117/ds000117_R0.1.1/uncompressed/ #> | Numbers 1-19 just made contiguous #> |  #> | 3. FTP subset of N=16: ftp: #> | ftp://ftp.mrc-cbu.cam.ac.uk/personal/rik.henson/wakemandg_hensonrn/ This #> | set was used for SPM Courses Designed to illustrate multimodal integration, #> | so wanted good MRI+MEG+EEG data for all subjects Removed original #> | subject_01 and subject_06 because bad EEG data; subject_19 because poor EEG #> | and fMRI data (And renumbered subject_14 for some reason). #> |  #> | 4. Current OpenNeuro subset N=16 used for (BIDS): #> | https://openneuro.org/datasets/ds000117 OpenNeuro was rebranding of #> | openfMRI, and enforced BIDS format Since this version designed to #> | illustrate multi-modal BIDS, kept same numbering as FTP #> |  #> | W&H2015 openfMRI FTP openNeuro ======== ====== === ======= subject_01 #> | sub001 subject_02 sub002 Sub01 sub-01 subject_03 sub003 Sub02 sub-02 #> | subject_05 sub004 Sub03 sub-03 subject_06 sub005 subject_08 sub006 Sub05 #> | sub-05 subject_09 sub007 Sub06 sub-06 subject_10 sub008 Sub07 sub-07 #> | subject_11 sub009 Sub08 sub-08 subject_12 sub010 Sub09 sub-09 subject_14 #> | sub011 Sub04 sub-04 subject_15 sub012 Sub10 sub-10 subject_16 sub013 Sub11 #> | sub-11 subject_17 sub014 Sub12 sub-12 subject_18 sub015 Sub13 sub-13 #> | subject_19 sub016 subject_23 sub017 Sub14 sub-14 subject_24 sub018 Sub15 #> | sub-15 subject_25 sub019 Sub16 sub-16"},{"path":"https://dipterix.org/bidsr/articles/aaa-get-started.html","id":"file-dataset_description-json","dir":"Articles","previous_headings":"Overview of a BIDS project","what":"File dataset_description.json","title":"Get Started","text":"top-level data description can parsed via obtain values, use $ @ operator (. Python):","code":"description <- project$get_bids_dataset_description() description$BIDSVersion #> [1] \"1.8.0\"  # or  description@BIDSVersion #> [1] \"1.8.0\""},{"path":"https://dipterix.org/bidsr/articles/aaa-get-started.html","id":"file-participants-tsv","dir":"Articles","previous_headings":"Overview of a BIDS project","what":"File participants.tsv","title":"Get Started","text":"File participants.tsv top-level tabular lists subjects. file can queried via method get_participants: Alternatively, can read tsv file as_bids_tabular","code":"participants <- project$get_bids_participants() participant_path <- file.path(project, \"participants.tsv\") as_bids_tabular(participant_path, cls = BIDSTabularParticipants) #> <BIDS Tabular>[BIDSTabular] #> $meta: #> { #>   \"age\": { #>     \"LongName\": \"age\", #>     \"Units\": \"year\", #>     \"TermURL\": \"http://purl.obolibrary.org/obo/PATO_0000011\" #>   }, #>   \"sex\": { #>     \"LongName\": \"sex\", #>     \"Description\": \"String value indicating phenotypical sex.\", #>     \"Levels\": { #>       \"F\": { #>         \"Description\": \"Female\", #>         \"TermURL\": \"http://purl.obolibrary.org/obo/PATO_0000383\" #>       }, #>       \"M\": { #>         \"Description\": \"Male\", #>         \"TermURL\": \"http://purl.obolibrary.org/obo/PATO_0000384\" #>       } #>     }, #>     \"TermURL\": \"http://purl.obolibrary.org/obo/PATO_0001894\" #>   }, #>   \"first_ses\": { #>     \"LongName\": \"first session\", #>     \"Description\": \"Indicates which session was the first session for this subject.\", #>     \"Levels\": { #>       \"meg\": { #>         \"Description\": \"meg was the first session\" #>       }, #>       \"mri\": { #>         \"Description\": \"mri was the first session\" #>       } #>     } #>   } #> } #>  #> $content: #>     participant_id   age    sex first_ses #>             <char> <int> <char>    <char> #>  1:         sub-01    31      M       meg #>  2:         sub-02    25      M       meg #>  3:         sub-03    30      M       meg #>  4:         sub-04    26      F       meg #>  5:         sub-05    23      F       meg #> ---                                       #> 13:         sub-13    25      F       meg #> 14:         sub-14    24      F       mri #> 15:         sub-15    30      M       mri #> 16:         sub-16    25      M       mri #> 17:  sub-emptyroom    NA   <NA>      <NA>"},{"path":"https://dipterix.org/bidsr/articles/aaa-get-started.html","id":"instantiate-a-bids-subject","dir":"Articles","previous_headings":"","what":"Instantiate a BIDS subject","title":"Get Started","text":"Given project path instance, BIDS subject can instantiated via BIDS subjects entity key sub- marks subject code, example, sub-06 means subject 06, hence entity key sub- can omitted, bidsr accepts input subject_code = \"06\". project instantiated, path also acceptable, check alternative:","code":"subject <- bids_subject(   project = project,    subject_code = \"sub-06\" )  print(subject) #> <BIDSSubject> `sub-06` (project `ds000117`) subject <- bids_subject(   project = project_path,    subject_code = \"06\" )"},{"path":"https://dipterix.org/bidsr/articles/aaa-get-started.html","id":"raw-source-or-derivative-data","dir":"Articles","previous_headings":"Instantiate a BIDS subject","what":"Raw, source, or derivative data","title":"Get Started","text":"BIDS mainly focuses regulating raw data, however, also supports formatting source data derivatives. corresponding paths can queried via resolve_bids_path method. resolve root path raw/source data, derivatives, please specify derivative names, example:","code":"# resolve subject path (raw data by default) resolve_bids_path(subject) #> /home/runner/.cache/R/bidsr/bids-examples/bids-examples-master/ds000117/./sub-06  resolve_bids_path(subject, storage = \"source\") #> /home/runner/.cache/R/bidsr/bids-examples/bids-examples-master/ds000117/sourcedata/sub-06 resolve_bids_path(subject, storage = \"derivative\", prefix = \"freesurfer\") #> /home/runner/.cache/R/bidsr/bids-examples/bids-examples-master/ds000117/derivatives/freesurfer/sub-06"},{"path":"https://dipterix.org/bidsr/articles/aaa-get-started.html","id":"query-subject-files-by-types","dir":"Articles","previous_headings":"Instantiate a BIDS subject","what":"Query subject files by types","title":"Get Started","text":"official BIDS extensions support various data types, anat, func, meg, eeg, ieeg, etc. query data files type, use query_bids method. following example shows anat data path, potential meta files use fine-grained search parameters, replace 'anat' list search parameters. another example filters derivative files BIDS compliant.","code":"query_bids(subject, \"anat\") #>           parsed data_type suffix extension    sub    ses    acq   run  echo #>           <AsIs>    <char> <char>    <char> <char> <char> <char> <int> <int> #>  1: sub-06/s....      anat    T1w    nii.gz     06    mri mprage    NA    NA #>  2: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     1 #>  3: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     2 #>  4: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     3 #>  5: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     4 #>  6: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     5 #>  7: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     6 #>  8: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     7 #>  9: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     1 #> 10: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     2 #> 11: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     3 #> 12: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     4 #> 13: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     5 #> 14: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     6 #> 15: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     7 query_bids(subject, list(   # dataset to filter, choices are raw, source, or derivative   storage = \"raw\",      # include JSON sidecars; default is `FALSE`     sidecars = FALSE,      # set to `NULL` to include all data types   data_types = \"anat\",      # filter all suffixes   suffixes = NULL )) #>           parsed data_type suffix extension    sub    ses    acq   run  echo #>           <AsIs>    <char> <char>    <char> <char> <char> <char> <int> <int> #>  1: sub-06/s....      anat    T1w    nii.gz     06    mri mprage    NA    NA #>  2: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     1 #>  3: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     2 #>  4: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     3 #>  5: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     4 #>  6: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     5 #>  7: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     6 #>  8: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     1     7 #>  9: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     1 #> 10: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     2 #> 11: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     3 #> 12: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     4 #> 13: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     5 #> 14: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     6 #> 15: sub-06/s....      anat  FLASH    nii.gz     06    mri   <NA>     2     7 query_bids(subject, list(   # filter derivatives   storage = \"derivative\",      # filter `derivatives/meg_derivatives` folder   prefix = \"meg_derivatives\",    # include JSON sidecars   sidecars = TRUE,      # set to `NULL` to include all data types   data_types = NULL,      # only keep files with *_meg/log.* suffixes   suffixes = c(\"meg\", \"log\") )) #>           parsed data_type suffix extension    sub    ses            task #>           <AsIs>    <char> <char>    <char> <char> <char>          <char> #>  1: derivati....     _root    meg      json     06    meg facerecognition #>  2: derivati....       meg    meg      json     06    meg facerecognition #>  3: derivati....       meg    log       txt     06    meg facerecognition #>  4: derivati....       meg    meg       fif     06    meg facerecognition #>  5: derivati....       meg    log       txt     06    meg facerecognition #>  6: derivati....       meg    meg       fif     06    meg facerecognition #>  7: derivati....       meg    log       txt     06    meg facerecognition #>  8: derivati....       meg    meg       fif     06    meg facerecognition #>  9: derivati....       meg    log       txt     06    meg facerecognition #> 10: derivati....       meg    meg       fif     06    meg facerecognition #> 11: derivati....       meg    log       txt     06    meg facerecognition #> 12: derivati....       meg    meg       fif     06    meg facerecognition #> 13: derivati....       meg    log       txt     06    meg facerecognition #> 14: derivati....       meg    meg       fif     06    meg facerecognition #>       proc   run #>     <char> <int> #>  1:    sss    NA #>  2:    sss    NA #>  3:    sss     1 #>  4:    sss     1 #>  5:    sss     2 #>  6:    sss     2 #>  7:    sss     3 #>  8:    sss     3 #>  9:    sss     4 #> 10:    sss     4 #> 11:    sss     5 #> 12:    sss     5 #> 13:    sss     6 #> 14:    sss     6"},{"path":"https://dipterix.org/bidsr/articles/aaa-get-started.html","id":"filter-get-bids-entity","dir":"Articles","previous_headings":"","what":"Filter & get BIDS entity","title":"Get Started","text":"example filtering func event files BIDS entity run=02 first column contains list file instances. ’s example read ACPC electrode coordinates: first column \"filter_result\" parsed file object entity information: get entity values, use get_bids_entity: supported schema, BIDS entity rules file can queried via get_bids_entity_rules(event_file) method Object event_file relative project root, hence can read joining project root path","code":"filter_result <- query_bids(subject, list(   storage = \"raw\",   sidecars = FALSE,      data_types = \"func\",   suffixes = \"events\",      # use R \"formula\" to filter entities   entity_filters = list(      # entity_key ~ expression returning TRUE/FALSE     # When filtering the entities, `entity_key` will be     # replaced with its value     run ~ as.integer(run) == 2   ) )) filter_result #>          parsed data_type suffix extension    sub    ses            task   run #>          <AsIs>    <char> <char>    <char> <char> <char>          <char> <int> #> 1: sub-06/s....      func events       tsv     06    mri facerecognition     2 event_file <- filter_result$parsed[[1]] event_file #> sub-06/ses-mri/func/sub-06_ses-mri_task-facerecognition_run-02_events.tsv get_bids_entity(event_file, \"task\") #> [1] \"facerecognition\" event_path <- file.path(project, event_file)  # or  event_path <- resolve_bids_path(project, format(event_file))  as_bids_tabular(event_path) #> <BIDS Tabular>[BIDSTabular] #> $meta: #> {} #>  #> $content: #>        onset duration circle_duration  stim_type trigger button_pushed #>        <num>    <num>           <num>     <char>   <int>         <int> #>   1:   0.000    0.897           0.596 UNFAMILIAR      13             4 #>   2:   3.207    0.895           0.549 UNFAMILIAR      14             4 #>   3:   6.514    0.959           0.547  SCRAMBLED      17             7 #>   4:   9.738    0.850           0.495  SCRAMBLED      18             7 #>   5:  12.895    0.988           0.548     FAMOUS       5             4 #>  ---                                                                   #>  96: 385.073    0.935           0.439 UNFAMILIAR      13             4 #>  97: 388.331    0.944           0.551 UNFAMILIAR      13             4 #>  98: 391.455    0.988           0.417     FAMOUS       5             7 #>  99: 394.711    0.912           0.498     FAMOUS       6             7 #> 100: 397.401    0.012           0.000       <NA>     999             0 #>      response_time       stim_file #>              <num>          <char> #>   1:         0.849   func/u020.bmp #>   2:         0.729   func/u020.bmp #>   3:         1.197   func/s030.bmp #>   4:         0.695   func/s030.bmp #>   5:         1.075   func/f027.bmp #>  ---                               #>  96:         0.884   func/u031.bmp #>  97:         1.183   func/u029.bmp #>  98:         0.869   func/f021.bmp #>  99:         1.200   func/f021.bmp #> 100:         0.000 func/Circle.bmp"},{"path":"https://dipterix.org/bidsr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhengjia Wang. Author, maintainer. Trustees University Pennsylvania. Copyright holder.           files package unless explicitly stated file listed 'Copyright' section .","code":""},{"path":"https://dipterix.org/bidsr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Magnotti, JF, Wang, Z, Beauchamp, MS. RAVE: comprehensive open-source software reproducible analysis visualization intracranial EEG data. NeuroImage, 223, p.117341. Gorgolewski K, Auer T, Calhoun V, Craddock R, Das S, Duff E, Flandin G, Ghosh S, Glatard T, Halchenko Y, Handwerker D, Hanke M, Keator D, Li X, Michael Z, Maumet C, Nichols B, Nichols T, Pellman J, Poline J, Rokem , Schaefer G, Sochat V, Triplett W, Turner J, Varoquaux G, Poldrack R (2016). “brain imaging data structure, format organizing describing outputs neuroimaging experiments.” Scientific Data, 3, 160044. doi:10.1038/sdata.2016.44.","code":"@Article{,   title = {{RAVE}: Comprehensive open-source software for reproducible analysis and visualization of intracranial EEG data},   author = {John F. Magnotti and Zhengjia Wang and Michael S. Beauchamp},   journal = {NeuroImage},   year = {2020},   volume = {223},   pages = {117341},   doi = {10.1016/j.neuroimage.2020.117341}, } @Article{,   title = {The brain imaging data structure, a format for organizing and describing outputs of neuroimaging experiments},   author = {Krzysztof J. Gorgolewski and Tibor Auer and Vince D. Calhoun and R. Cameron Craddock and Samir Das and Eugene P. Duff and Guillaume Flandin and Satrajit S. Ghosh and Tristan Glatard and Yaroslav O. Halchenko and Daniel A. Handwerker and Michael Hanke and David Keator and Xiangrui Li and Zachary Michael and Camille Maumet and B. Nolan Nichols and Thomas E. Nichols and John Pellman and Jean-Baptiste Poline and Ariel Rokem and Gunnar Schaefer and Vanessa Sochat and William Triplett and Jessica A. Turner and Gaël Varoquaux and Russell A. Poldrack},   journal = {Scientific Data},   year = {2016},   volume = {3},   pages = {160044},   doi = {10.1038/sdata.2016.44}, }"},{"path":"https://dipterix.org/bidsr/index.html","id":"bidsr","dir":"","previous_headings":"","what":"A Brain Imaging Data Structure (BIDS) Parser","title":"A Brain Imaging Data Structure (BIDS) Parser","text":"Brain Imaging Data Structure (BIDS) standard organizing neuroimaging behavioral data (see https://bids.neuroimaging.io/index.html). Package bidsr aims providing comprehensive tools query manipulate BIDS data files. package experimental, please check Road-map.","code":""},{"path":"https://dipterix.org/bidsr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Brain Imaging Data Structure (BIDS) Parser","text":"can install development version bidsr like :","code":"# install.packages(\"pak\") pak::pak(\"dipterix/bidsr\")"},{"path":"https://dipterix.org/bidsr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Brain Imaging Data Structure (BIDS) Parser","text":"example demonstrates high-level tools query BIDS project. code requires executing built-command download BIDS example data-sets. Please copy-paste-run following R commands: Let’s inspect project ieeg_motorMiller2007 official BIDS example repository:","code":"library(bidsr) example_root <- download_bids_examples() ## Path to `ieeg_motorMiller2007` project_path <- file.path(example_root, \"ieeg_motorMiller2007\")  ## BIDS project instance project <- bids_project(path = project_path)  ## The top-level `dataset_description.json` and `participants.tsv`  ## can be parsed via description <- project$get_bids_dataset_description() participants <- project$get_bids_participants()   ## To obtain the values, use `$` operator (same as `.` in `Python`): description$BIDSVersion #> [1] \"1.0.2\"  ## Given a project path or instance, a `BIDS` subject can be instantiated via  ## the following two ways.   # Method 1 subject <- bids_subject(project = project, subject_code = \"sub-bp\")  # Method 2 subject <- bids_subject(project = project_path, subject_code = \"bp\")  ## The official `BIDS` and its extensions support various of data types,  ## such as `anat`, `func`, `meg`, `eeg`, `ieeg`, etc.  ## use `query_modality` method to query the files ieeg_table <- query_bids(subject, \"ieeg\") print(ieeg_table) #>          parsed data_type     suffix extension    sub    ses     space   task #>          <AsIs>    <char>     <char>    <char> <char> <char>    <char> <char> #> 1: sub-bp/s....      ieeg electrodes       tsv     bp     01      ACPC   <NA> #> 2: sub-bp/s....      ieeg electrodes       tsv     bp     01 Talairach   <NA> #> 3: sub-bp/s....      ieeg   channels       tsv     bp     01      <NA>  motor #> 4: sub-bp/s....      ieeg     events       tsv     bp     01      <NA>  motor #> 5: sub-bp/s....      ieeg       ieeg       eeg     bp     01      <NA>  motor #> 6: sub-bp/s....      ieeg       ieeg      vhdr     bp     01      <NA>  motor #> 7: sub-bp/s....      ieeg       ieeg      vmrk     bp     01      <NA>  motor #>      run #>    <int> #> 1:    NA #> 2:    NA #> 3:     1 #> 4:     1 #> 5:     1 #> 6:     1 #> 7:     1   ## The first column contains a list of file instances. Here's an  ## example to read the `ACPC` electrode coordinates: subset_result <- subset(ieeg_table, space == \"ACPC\" & suffix == \"electrodes\") print(subset_result) #>          parsed data_type     suffix extension    sub    ses  space   task #>          <AsIs>    <char>     <char>    <char> <char> <char> <char> <char> #> 1: sub-bp/s....      ieeg electrodes       tsv     bp     01   ACPC   <NA> #>      run #>    <int> #> 1:    NA  # Get parsed 'BIDS' file object path_parsed <- subset_result$parsed[[1]] print(path_parsed) #> sub-bp/ses-01/ieeg/sub-bp_ses-01_space-ACPC_electrodes.tsv  electrode_path <- file.path(project, path_parsed) as_bids_tabular(electrode_path) #> <BIDS Tabular>[BIDSTabular] #> $meta: #> {} #>  #> $content: #>      name         x           y          z  size    type manufacturer #>     <int>     <num>       <num>      <num> <int>  <char>       <char> #>  1:     1 -38.23672  42.9909111  32.116130     4 surface       AdTech #>  2:     2 -44.21946  32.4059267  34.909389     4 surface       AdTech #>  3:     3 -45.31461  22.1149697  37.702649     4 surface       AdTech #>  4:     4 -48.16445  11.2359580  40.201882     4 surface       AdTech #>  5:     5 -54.12109   0.9450009  42.995141     4 surface       AdTech #> ---                                                                   #> 43:    43 -58.09218   5.5024247 -12.134986     4 surface       AdTech #> 44:    44 -62.06327  -5.0825597  -9.341726     4 surface       AdTech #> 45:    45 -65.52670 -15.6675440  -7.577562     4 surface       AdTech #> 46:    46 -65.38842 -27.2816241  -5.372357     4 surface       AdTech #> 47:    47 -63.00000 -38.6016769  -4.343261     4 surface       AdTech   ## `BIDS` entity  ## Object `path_parsed` is a file entity class, with the entities parsed class(path_parsed) #> [1] \"bidsr::BIDSEntityFile_ieeg_electrodes\" #> [2] \"bidsr::BIDSEntityFile\"                 #> [3] \"bidsr::BIDSClassBase\"                  #> [4] \"S7_object\"  path_parsed$get_bids_entity(\"space\") #> [1] \"ACPC\"  ## List all available entities path_parsed$entities #> $sub #> sub-bp #>  #> $ses #> ses-01 #>  #> $space #> space-ACPC  ## If supported by schema, the `BIDS` entity rules for the  ## file can be queried via path_parsed$get_bids_entity_rules() #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"optional\" \"label\"    #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"optional\" \"index\"    #>  #> $space #> [1] \"optional\" \"label\"    #>  #> $desc #> [1] \"optional\" \"label\""},{"path":"https://dipterix.org/bidsr/reference/BIDSClassBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-level abstract class for bidsr — BIDSClassBase","title":"Low-level abstract class for bidsr — BIDSClassBase","text":"Low-level abstract class definition; see new_bids_class create new class definitions. bidsr classes inherit abstract class, provide consistent behavior.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSClassBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-level abstract class for bidsr — BIDSClassBase","text":"","code":"BIDSClassBase()"},{"path":"https://dipterix.org/bidsr/reference/BIDSClassBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-level abstract class for bidsr — BIDSClassBase","text":"call S7 class directly, see new_bids_class use properly","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSClassBase.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Low-level abstract class for bidsr — BIDSClassBase","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetDescription.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definition of 'BIDS' data-set description — get_bids_dataset_description","title":"Class definition of 'BIDS' data-set description — get_bids_dataset_description","text":"See https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#dataset_descriptionjson specification.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetDescription.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition of 'BIDS' data-set description — get_bids_dataset_description","text":"","code":"get_bids_dataset_description(x, parent_directory, ...)  BIDSDatasetDescription(   Name = character(0),   BIDSVersion = character(0),   DatasetLinks = list(),   HEDVersion = character(0),   DatasetType = character(0),   License = character(0),   Authors = character(0),   GeneratedBy = list(),   SourceDatasets = list(),   Acknowledgements = character(0),   HowToAcknowledge = character(0),   Funding = character(0),   EthicsApprovals = character(0),   ReferencesAndLinks = character(0),   DatasetDOI = character(0),   parent_directory = character(0) )"},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetDescription.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition of 'BIDS' data-set description — get_bids_dataset_description","text":"x R object interpreted 'BIDS' data description; default support list, path 'json' file, 'json' string, etc. parent_directory parent directory file 'dataset_description.json' stored. input ignored x path 'dataset_description.json', otherwise must. ... passed methods Name (required, string) Name data-set. BIDSVersion (required, string) version BIDS standard used. DatasetLinks (required 'BIDS-URI' used) Used map given data-set name 'BIDS-URI' form bids:<dataset-name>:path/within/dataset local remote location. HEDVersion (recommended strings) version 'HED' schema used validate 'HED' tags study. May include single schema base schema one library schema. DatasetType (recommended string) Must one \"raw\" \"derivative\"; package bidsr automatically assigns \"raw\" given. License (recommended string) license data-set Authors (recommended strings) Vector individuals contributed creation/curation data-set GeneratedBy (recommended) converted BIDSDatasetGeneratedBy SourceDatasets Used specify locations relevant attributes source data-sets. Valid keys object include \"URL\", \"DOI\", \"Version\" string values; Package bidsr check names Acknowledgements (optional string) Text acknowledging contributions individuals institutions beyond listed Authors Funding. HowToAcknowledge (optional string) Text containing instructions researchers using dataset acknowledge original authors. field can also used define publication cited publications use dataset. Funding (optional strings) List sources funding (grant numbers). EthicsApprovals (optional strings) List ethics committee approvals research protocols /protocol identifiers. ReferencesAndLinks (optional strings) List references publications contain information data-set. reference may textual URI. DatasetDOI (optional string) Digital Object Identifier data-set (corresponding paper). 'DOIs' expressed valid 'URI'","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetDescription.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class definition of 'BIDS' data-set description — get_bids_dataset_description","text":"S7 description object contains fields describing data set; see 'Examples' usages.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetDescription.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class definition of 'BIDS' data-set description — get_bids_dataset_description","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetDescription.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class definition of 'BIDS' data-set description — get_bids_dataset_description","text":"","code":"# ---- Manually enter entries ---------------------------------------- dataset_description <- BIDSDatasetDescription(   # a parent directory is mandatory as it defines what data   # dataset_description.json applies to    parent_directory = \"/path/to/BIDS/folder\",    Name = \"A dummy experiments\",   BIDSVersion = \"1.6.0\",   License = \"CC0\",   Authors = c(\"Zhengjia Wang\"),   Acknowledgements = c(     \"Package `bidsr` is a 3rd-party BIDS reader developed by\",     \"a RAVE (https://rave.wiki) team member with procrastination.\"   ),   HowToAcknowledge = c(     \"Please cite this paper:\",     \"https://doi.org/10.1016/j.neuroimage.2020.117341\"   ),   Funding = c(     \"NIH R01MH133717\",     \"NIH U01NS113339\",     \"NIH 1R24MH117529\"   ),   ReferencesAndLinks = c(     \"https://rave.wiki\"   ),   DatasetDOI = \"https://doi.org/10.1016/j.neuroimage.2020.117341\",   HEDVersion = \"8.0.0\",   GeneratedBy = list(     list(       Name = \"Dipterix\",       Version = \"0.0.1\",       Container = list(         Type = \"r-package\",         Tag = \"dipterix/bidsr:0.0.1\"       )     )   ) )  # access the information dataset_description$License #> [1] \"CC0\"  dataset_description$GeneratedBy[[1]]$Container #> $Type #> [1] \"r-package\" #>  #> $Tag #> [1] \"dipterix/bidsr:0.0.1\" #>   # ---- Read from file ---------------------------------------------  # Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE) if(!isFALSE(examples)) {   example_descr <- file.path(     examples, \"ieeg_epilepsy_ecog\", \"dataset_description.json\")    x <- get_bids_dataset_description(example_descr)   x    # ---- Formatting --------------------------------------------------   # convert to R list (use recursive to expand field `GeneratedBy`)   as.list(x, recursive = TRUE)    # JSON string   format(x) }"},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetGeneratedBy.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definition for 'BIDS' meta-data 'GeneratedBy' — BIDSDatasetGeneratedBy","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — BIDSDatasetGeneratedBy","text":"See definition https://bids-specification.readthedocs.io/en/stable/glossary.html#objects.metadata.GeneratedBy","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetGeneratedBy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — BIDSDatasetGeneratedBy","text":"","code":"BIDSDatasetGeneratedBy(   Name = character(0),   Version = character(0),   Description = character(0),   CodeURL = character(0),   Container = list() )"},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetGeneratedBy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — BIDSDatasetGeneratedBy","text":"Name (character, required) name pipeline process generated outputs. Version (character, optional) version pipeline Description (character, optional) plain-text description pipeline process generated outputs. CodeURL (character, optional) 'URL' code used generate data may found. Container (character, optional) Used specify location relevant attributes software container image used produce data. Valid keys object include type, tag 'URL' string values. Package 'bidsr' check inside entry.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetGeneratedBy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — BIDSDatasetGeneratedBy","text":"Instantiated object class BIDSDatasetGeneratedBy","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetGeneratedBy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — BIDSDatasetGeneratedBy","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSDatasetGeneratedBy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — BIDSDatasetGeneratedBy","text":"","code":"x <- BIDSDatasetGeneratedBy(   Name = \"RAVE Team\",   Version = \"0.0.1\",   Container = list(     Type = \"docker\",     Tag = \"rave-ieeg/rave-pipelines:0.0.1\"   ) )  x #> { #>   \"Name\": \"RAVE Team\", #>   \"Version\": \"0.0.1\", #>   \"Container\": { #>     \"Type\": \"docker\", #>     \"Tag\": \"rave-ieeg/rave-pipelines:0.0.1\" #>   } #> }  x$Version <- \"0.0.2\"  # convert to basic list as.list(x) #> $Name #> [1] \"RAVE Team\" #>  #> $Version #> [1] \"0.0.2\" #>  #> $Container #> $Container$Type #> [1] \"docker\" #>  #> $Container$Tag #> [1] \"rave-ieeg/rave-pipelines:0.0.1\" #>  #>   # get JSON string format(x) #> { #>   \"Name\": \"RAVE Team\", #>   \"Version\": \"0.0.2\", #>   \"Container\": { #>     \"Type\": \"docker\", #>     \"Tag\": \"rave-ieeg/rave-pipelines:0.0.1\" #>   } #> }"},{"path":"https://dipterix.org/bidsr/reference/BIDSEntity.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definitions of 'BIDS' entity — BIDSEntity","title":"Class definitions of 'BIDS' entity — BIDSEntity","text":"'BIDS' entity attribute can associated file, contributing identification file component file-name form hyphen-separated key-value pair. specification can found https://bids-specification.readthedocs.io/en/stable/common-principles.html#entities.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSEntity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definitions of 'BIDS' entity — BIDSEntity","text":"","code":"BIDSEntity_label_required(   key = character(0),   value = character(0),   index_format = \"%d\" )  BIDSEntity_label_optional(   key = character(0),   value = character(0),   index_format = \"%d\" )  BIDSEntity_label_prohibited(   key = character(0),   value = character(0),   index_format = \"%d\" )  BIDSEntity_index_required(   key = character(0),   value = integer(0),   index_format = \"%d\" )  BIDSEntity_index_optional(   key = character(0),   value = integer(0),   index_format = \"%d\" )  BIDSEntity_index_prohibited(   key = character(0),   value = integer(0),   index_format = \"%d\" )  BIDSEntity_any_required(   key = character(0),   value = character(0),   index_format = \"%d\" )  BIDSEntity_any_optional(   key = character(0),   value = character(0),   index_format = \"%d\" )  BIDSEntity_any_prohibited(   key = character(0),   value = character(0),   index_format = \"%d\" )"},{"path":"https://dipterix.org/bidsr/reference/BIDSEntity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definitions of 'BIDS' entity — BIDSEntity","text":"key (string, required) short string, typically compression entity name, uniquely identifies entity part file-name. value string (label) non-negative integer (index); requisite form value gets specified alongside key whenever entity appears file-name. entity, value one two possible types: index_format index entities, format index values (e.g. padding zeros) formatted string; default without padding Index: non-negative integer, potentially zero-padded consistent width. Label: alphanumeric string. Note labels must collide casing ignored (bidsr validate ).","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSEntity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class definitions of 'BIDS' entity — BIDSEntity","text":"'BIDS' entity object.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSEntity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class definitions of 'BIDS' entity — BIDSEntity","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSEntity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class definitions of 'BIDS' entity — BIDSEntity","text":"","code":"entity_int <- BIDSEntity_index_optional(key = \"run\", value = \"001\") entity_int$value <- integer()  print(entity_int) # nothing will be printed out #>   # subject entity entity_subject <- BIDSEntity_any_required(key = \"sub\", value = \"HUP225\")  print(entity_subject) #> sub-HUP225  # index entity_subject$value <- 1  print(entity_subject) #> sub-1  # format index entity_subject$index_format <- \"%03d\" print(entity_subject) #> sub-001   # trying to set invalid values will result in errors try({   BIDSEntity_index_required(key = \"run\") }) #> Error : <bidsr::BIDSEntity_index_required>@value Must have length 1, but has length 0   entity_int <- BIDSEntity_index_required(key = \"run\", value = \"001\")  # trying to unset require entity try({   entity_int$value <- integer() }) #> Error : <bidsr::BIDSEntity_index_required>@value Must have length 1, but has length 0  # trying to set invalid entity try({   entity_int$value <- \"asdad\" }) #> Error in ensure_entity_index(value) :  #>   Unable to set BIDS entity as index value. Value cannot be converted to integers: ‘asdad’  # trying to set prohibited entiry try({   BIDSEntity_index_prohibited(\"invalid\", 123) }) #> Error : <bidsr::BIDSEntity_index_prohibited>@value Must have length 0, but has length 1"},{"path":"https://dipterix.org/bidsr/reference/BIDSMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-level nested map to store key-value data with inherited structure — BIDSMap","title":"Low-level nested map to store key-value data with inherited structure — BIDSMap","text":"Low-level nested map store key-value data inherited structure","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-level nested map to store key-value data with inherited structure — BIDSMap","text":"","code":"BIDSMap(parent = NULL, search_depth = BIDS_MAP_MAX_DEPTH())"},{"path":"https://dipterix.org/bidsr/reference/BIDSMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-level nested map to store key-value data with inherited structure — BIDSMap","text":"parent NULL map top level, another map inherit search_depth integer maximum search depths; default 29; set options 'bidsr.map.search_depth' environment variable 'BIDS_MAP_MAX_DEPTH' change default depth","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-level nested map to store key-value data with inherited structure — BIDSMap","text":"'BIDSMap' object.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Low-level nested map to store key-value data with inherited structure — BIDSMap","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low-level nested map to store key-value data with inherited structure — BIDSMap","text":"","code":"root_map <- BIDSMap() root_map$key1 <- 1 root_map$key2 <- 2 names(root_map) #> [1] \"key2\" \"key1\"  child_map <- BIDSMap(parent = root_map) child_map$key3 <- 3 names(child_map) #> [1] \"key1\" \"key2\" \"key3\" child_map$key1 #> [1] 1 child_map$key2 #> [1] 2  # mask key2 child_map$key2 <- \"a\" child_map #> <bidsr::map 1797d5c5-09d1-4f7d-9a4a-a6af29ab1ca8> #>   (parent: 5f5f2d1e-2c68-43cd-86ce-9b559dbdbae9) #> [key2, key3] #>   (Inherited) [key1]  root_map$key2 #> [1] 2 child_map$key2 #> [1] \"a\"  # nested maps grand_child <- BIDSMap(parent = child_map)  # value comes from child map grand_child$key2 #> [1] \"a\"  # remove key2 from child map child_map@impl$remove(\"key2\")  # key2 is from root map now grand_child$key2 #> [1] 2"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabular.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definitions and utilities for 'BIDS' tabular — as_bids_tabular","title":"Class definitions and utilities for 'BIDS' tabular — as_bids_tabular","text":"Official specification link: https://bids-specification.readthedocs.io/en/stable/common-principles.html#tabular-files. Function save_tabular high-level generic function default calls low-level function save_bids_tabular_default default.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definitions and utilities for 'BIDS' tabular — as_bids_tabular","text":"","code":"as_bids_tabular(x, ...)  save_bids_tabular(x, path, meta = TRUE, ...)  BIDSTabularColumnDescriptor(..., .list = list())  BIDSTabularMetaSidecar(columns = list())  BIDSTabular(content, meta = NULL)  save_bids_tabular_default(   x,   path,   meta = TRUE,   compact_meta = TRUE,   milliseconds = TRUE,   utc = TRUE,   ... )  new_bids_tabular_class(   table_name,   parent = BIDSTabular,   content_setter = NULL,   meta_preset = NULL,   prepare_save = NULL,   lower_case_column_names = FALSE )"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabular.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definitions and utilities for 'BIDS' tabular — as_bids_tabular","text":"x R object can converted (e.g. list, table), path tabular file. ..., .list BIDSTabularColumnDescriptor, list key-value properties; as_bids_tabular, passed BIDSTabularMetaSidecar path path save file; file always saved tabular-separated value ('TSV') format meta instance BIDSTabularMetaSidecar, class containing list descriptors column (see argument columns) columns named list, key correspond table column name, item named list descriptors, BIDSTabularColumnDescriptor instance content data frame table column names non-blanks possibly snake-cases (see specification); bidsr check column names compatibility concerns. However users respect specification use recommended conventions compact_meta logical, whether meta side-car ('JSON' file) use compact format; default true milliseconds, utc used convert nanotime 'BIDS' time-stamp format; default keep milliseconds use 'UTC' timezone. table_name name table, used generate new class; class name BIDSTabular_<table_name> parent parent class new class; default BIDSTabular content_setter setter function set content; see bids_property meta_preset preset function set meta; see BIDSTabularMetaSidecar prepare_save function prepare content saving; take BIDSTabular object first argument, return content saved lower_case_column_names TRUE, column names converted lower case; default TRUE","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabular.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class definitions and utilities for 'BIDS' tabular — as_bids_tabular","text":"component BIDSTabular.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabular.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class definitions and utilities for 'BIDS' tabular — as_bids_tabular","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabular.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class definitions and utilities for 'BIDS' tabular — as_bids_tabular","text":"","code":"# convert a data table into BIDS tabular table <- data.frame(   a = c(1, 2, 3, NA, NA, 6, 7, 8, 9, 10),   b = sample(c('a', 'b'), size = 10, replace = TRUE) )  # basic as_bids_tabular(table) #> <BIDS Tabular>[BIDSTabular] #> $meta: #> {} #>  #> $content: #>         a      b #>     <num> <char> #>  1:     1      b #>  2:     2      a #>  3:     3      a #>  4:    NA      a #>  5:    NA      a #>  6:     6      b #>  7:     7      a #>  8:     8      a #>  9:     9      b #> 10:    10      b  # add descriptors tabular <- as_bids_tabular(   table,   a = list(LongName = \"An integer\"),   b = list(\"Levels\" = list('a' = \"Abnormal\", 'b' = \"Bipolar\")) ) tabular #> <BIDS Tabular>[BIDSTabular] #> $meta: #> { #>   \"a\": { #>     \"LongName\": \"An integer\" #>   }, #>   \"b\": { #>     \"Levels\": { #>       \"a\": \"Abnormal\", #>       \"b\": \"Bipolar\" #>     } #>   } #> } #>  #> $content: #>         a      b #>     <num> <char> #>  1:     1      b #>  2:     2      a #>  3:     3      a #>  4:    NA      a #>  5:    NA      a #>  6:     6      b #>  7:     7      a #>  8:     8      a #>  9:     9      b #> 10:    10      b   # query data is.data.frame(tabular$content) #> [1] TRUE tabular$content$a #>  [1]  1  2  3 NA NA  6  7  8  9 10  # query meta tabular$meta$columns$a #> { #>   \"LongName\": \"An integer\" #> }  # save to tsv tsv <- tempfile(fileext = \".tsv\") paths <- save_bids_tabular(tabular, tsv) print(paths) #> $table_path #> /tmp/RtmpxvWl5u/file1d567a5801cd.tsv #>  #> $sidecar_path #> /tmp/RtmpxvWl5u/file1d567a5801cd.json #>   # use base R to read read.table(tsv, header = TRUE, na.strings = \"n/a\") #>     a b #> 1   1 b #> 2   2 a #> 3   3 a #> 4  NA a #> 5  NA a #> 6   6 b #> 7   7 a #> 8   8 a #> 9   9 b #> 10 10 b  # get sidecar cat(readLines(paths$sidecar_path), sep = \"\\n\") #> { #>   \"a\": { #>     \"LongName\": \"An integer\" #>   }, #>   \"b\": { #>     \"Levels\": { #>       \"a\": \"Abnormal\", #>       \"b\": \"Bipolar\" #>     } #>   } #> }  unlink(tsv) unlink(paths$sidecar_path)"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularParticipants.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' participant table class — get_bids_participants","title":"'BIDS' participant table class — get_bids_participants","text":"tabular containing list participants demographics. class child class BIDSTabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#participants-file.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularParticipants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' participant table class — get_bids_participants","text":"","code":"get_bids_participants(x, ...)  BIDSTabularParticipants(content, meta = NULL)"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularParticipants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' participant table class — get_bids_participants","text":"x R object file path, project instances, etc. ... passed methods ignored content, meta see BIDSTabular","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularParticipants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' participant table class — get_bids_participants","text":"BIDSTabularParticipants instance inheriting BIDSTabular.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularParticipants.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'BIDS' participant table class — get_bids_participants","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularParticipants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' participant table class — get_bids_participants","text":"","code":"# basic tabular <- BIDSTabularParticipants(   data.frame(     participant_id = \"sub-001\"   ) ) tabular #> <BIDS Tabular>[BIDSTabular_participants] #> $meta: #> { #>   \"participant_id\": { #>     \"LongName\": \"Participant ID\", #>     \"Description\": \"A participant identifier of the form sub-<label>, matching a participant entity found in the dataset\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#participants-file\" #>   }, #>   \"species\": { #>     \"LongName\": \"Species\", #>     \"Description\": \"The species column SHOULD be a binomial species name from the NCBI Taxonomy (for example, homo sapiens, mus musculus, rattus norvegicus). For backwards compatibility, if species is absent, the participant is assumed to be homo sapiens.\", #>     \"TermURL\": \"https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi\" #>   }, #>   \"age\": { #>     \"LongName\": \"Subject age\", #>     \"Description\": \"Numeric value in years (float or integer value). It is recommended to tag participant ages that are 89 or higher as 89+, for privacy purposes\" #>   }, #>   \"sex\": { #>     \"LongName\": \"Sex\", #>     \"Description\": \"String value indicating phenotypical sex, one of \\\"male\\\", \\\"female\\\", \\\"other\\\"\", #>     \"Levels\": { #>       \"male\": \"male\", #>       \"female\": \"female\", #>       \"other\": \"other\" #>     } #>   }, #>   \"handedness\": { #>     \"LongName\": \"Subject handedness\", #>     \"Description\": \"String value indicating one of \\\"left\\\", \\\"right\\\", \\\"ambidextrous\\\"\", #>     \"Levels\": { #>       \"left\": \"left\", #>       \"right\": \"right\", #>       \"ambidextrous\": \"ambidextrous\" #>     }, #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/glossary.html#objects.columns.handedness\" #>   }, #>   \"strain\": { #>     \"LongName\": \"Strain\", #>     \"Description\": \"For species different from homo sapiens, string value indicating the strain of the species, for example: C57BL/6J\" #>   }, #>   \"strain_rrid\": { #>     \"LongName\": \"Strain RRID\", #>     \"Description\": \"For species different from homo sapiens, research resource identifier (RRID) of the strain of the species\", #>     \"TermURL\": \"https://rrid.site/data/source/nlx_154697-1/search\" #>   } #> } #>  #> $content: #>    participant_id      species #>            <char>       <char> #> 1:        sub-001 homo sapiens   # Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE) if(!isFALSE(examples)) {    file <- file.path(examples, \"ieeg_epilepsy_ecog\", \"participants.tsv\")    # read tabular as BIDSTabularParticipants   as_bids_tabular(file, cls = BIDSTabularParticipants)    # convert existing tabular   tabular <- BIDSTabular(     data.frame(       participant_id = \"sub-001\"     )   )   tabular <- as_bids_tabular(tabular, cls = BIDSTabularParticipants)    # save to tsv   tsv <- file.path(tempdir(), \"participants.tsv\")   paths <- save_bids_tabular(tabular, tsv)   print(paths)    # use base R to read   read.table(tsv, header = TRUE, na.strings = \"n/a\")    # get sidecar   cat(readLines(paths$sidecar_path), sep = \"\\n\")    unlink(tsv)   unlink(paths$sidecar_path) }"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularPhenotype.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' phenotype and assessment table class — get_bids_phenotype_data","title":"'BIDS' phenotype and assessment table class — get_bids_phenotype_data","text":"tabular containing list phenotype & assessment, metadata. class child class BIDSTabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#phenotypic--assessment-data.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularPhenotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' phenotype and assessment table class — get_bids_phenotype_data","text":"","code":"get_bids_phenotype_data(x, ...)  BIDSTabularPhenotype(content, meta = NULL)"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularPhenotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' phenotype and assessment table class — get_bids_phenotype_data","text":"x R object file path, project instances, etc. ... passed methods ignored content, meta see BIDSTabular","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularPhenotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' phenotype and assessment table class — get_bids_phenotype_data","text":"BIDSTabularPhenotype instance inheriting BIDSTabular.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularPhenotype.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'BIDS' phenotype and assessment table class — get_bids_phenotype_data","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularPhenotype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' phenotype and assessment table class — get_bids_phenotype_data","text":"","code":"BIDSTabularPhenotype(   meta = list(     MeasurementToolMetadata = list(       Description = \"Adult ADHD Clinical Diagnostic Scale V1.2\",       TermURL = \"https://www.cognitiveatlas.org/task/id/trm_5586ff878155d\"     ),     adhd_b = list(       Description = \"B. CHILDHOOD ONSET OF ADHD (PRIOR TO AGE 7)\",       Levels = list(         \"1\" = \"YES\",         \"2\" = \"NO\"       )     ),     adhd_c_dx = list(       Description = \"As child met A, B, C, D, E and F diagnostic criteria\",       Levels = list(         \"1\" = \"YES\",         \"2\" = \"NO\"       )     )   ),   content = data.frame(     MeasurementToolMetadata = c(2, 3, 4),     adhd_b = c(1, 2, 1),     adhd_c_dx = c(2, 1, 2)   ) ) #> <BIDS Tabular>[BIDSTabular_phenotype] #> $meta: #> { #>   \"MeasurementToolMetadata\": { #>     \"Description\": \"Adult ADHD Clinical Diagnostic Scale V1.2\", #>     \"TermURL\": \"https://www.cognitiveatlas.org/task/id/trm_5586ff878155d\" #>   }, #>   \"adhd_b\": { #>     \"Description\": \"B. CHILDHOOD ONSET OF ADHD (PRIOR TO AGE 7)\", #>     \"Levels\": { #>       \"1\": \"YES\", #>       \"2\": \"NO\" #>     } #>   }, #>   \"adhd_c_dx\": { #>     \"Description\": \"As child met A, B, C, D, E and F diagnostic criteria\", #>     \"Levels\": { #>       \"1\": \"YES\", #>       \"2\": \"NO\" #>     } #>   }, #>   \"Derivative\": { #>     \"LongName\": \"Derivative\", #>     \"Description\": \"[Optional, boolean] Indicates that values in the corresponding column are transformations of values from other columns (for example a summary score based on a subset of items in a questionnaire).\", #>     \"Levels\": { #>       \"true\": \"true\", #>       \"false\": \"false\" #>     } #>   } #> } #>  #> $content: #>    MeasurementToolMetadata adhd_b adhd_c_dx #>                      <num>  <num>     <num> #> 1:                       2      1         2 #> 2:                       3      2         1 #> 3:                       4      1         2"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' samples table class — get_bids_samples","title":"'BIDS' samples table class — get_bids_samples","text":"tabular containing list samples metadata. class child class BIDSTabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#samples-file.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' samples table class — get_bids_samples","text":"","code":"get_bids_samples(x, ...)  BIDSTabularSamples(content, meta = NULL)"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' samples table class — get_bids_samples","text":"x R object file path, project instances, etc. ... passed methods ignored content, meta see BIDSTabular","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' samples table class — get_bids_samples","text":"BIDSTabularSamples instance inheriting BIDSTabular.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSamples.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'BIDS' samples table class — get_bids_samples","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' samples table class — get_bids_samples","text":"","code":"# basic tabular <- BIDSTabularSamples(   data.frame(     sample_id = \"sample-001\",     participant_id = \"sub-001\",     sample_type = \"cell line\"   ) ) tabular #> <BIDS Tabular>[BIDSTabular_samples] #> $meta: #> { #>   \"sample_id\": { #>     \"LongName\": \"Sample ID\", #>     \"Description\": \"[Required, string] A sample identifier of the form `sample-<label>`, matching a sample entity found in the dataset\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#samples-file\" #>   }, #>   \"participant_id\": { #>     \"LongName\": \"Participant ID\", #>     \"Description\": \"[Required, string] A participant identifier of the form `sub-<label>`, matching a participant entity found in the dataset\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#participants-file\" #>   }, #>   \"sample_type\": { #>     \"LongName\": \"Sample Type\", #>     \"Description\": \"[Required, string] Biosample type defined by ENCODE Biosample Type\", #>     \"Levels\": { #>       \"cell line\": \"cell line\", #>       \"in vitro differentiated cells\": \"in vitro differentiated cells\", #>       \"primary cell\": \"primary cell\", #>       \"cell-free sample\": \"cell-free sample\", #>       \"cloning host\": \"cloning host\", #>       \"tissue\": \"tissue\", #>       \"whole organisms\": \"whole organisms\", #>       \"organoid\": \"organoid\", #>       \"technical sample\": \"technical sample\" #>     }, #>     \"TermURL\": \"https://www.encodeproject.org/profiles/biosample_type/\" #>   }, #>   \"pathology\": { #>     \"LongName\": \"Pathology\", #>     \"Description\": \"[Recommended, string] String value describing the pathology of the sample or type of control. When different from healthy, pathology SHOULD be specified. The pathology may be specified in either `samples.tsv` or `sessions.tsv`, depending on whether the pathology changes over time.\" #>   }, #>   \"derived_from\": { #>     \"LongName\": \"Derived From\", #>     \"Description\": \"[Recommended, string] `sample-<label>` entity from which a sample is derived, for example a slice of tissue (`sample-02`) derived from a block of tissue (`sample-01`).\" #>   } #> } #>  #> $content: #>     sample_id participant_id sample_type #>        <char>         <char>      <char> #> 1: sample-001        sub-001   cell line   # convert existing tabular tabular <- BIDSTabular(   data.frame(     sample_id = \"sample-001\",     participant_id = \"sub-001\",     sample_type = \"cell line\"   ) ) tabular <- as_bids_tabular(tabular, cls = BIDSTabularSamples)   # save to tsv tsv <- file.path(tempdir(), \"samples.tsv\") paths <- save_bids_tabular(tabular, tsv) print(paths) #> $table_path #> /tmp/RtmpxvWl5u/samples.tsv #>  #> $sidecar_path #> /tmp/RtmpxvWl5u/samples.json #>   # use base R to read read.table(tsv, header = TRUE, na.strings = \"n/a\") #>    sample_id participant_id sample_type #> 1 sample-001        sub-001   cell line  # get sidecar cat(readLines(paths$sidecar_path), sep = \"\\n\") #> {}  # clean up unlink(tsv) unlink(paths$sidecar_path)"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularScans.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' scans table class — BIDSTabularScans","title":"'BIDS' scans table class — BIDSTabularScans","text":"tabular containing list scans metadata. class child class BIDSTabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#scans-file.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularScans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' scans table class — BIDSTabularScans","text":"","code":"BIDSTabularScans(content, meta = NULL)"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularScans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' scans table class — BIDSTabularScans","text":"content, meta see BIDSTabular","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularScans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' scans table class — BIDSTabularScans","text":"BIDSTabularScans instance inheriting BIDSTabular.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularScans.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'BIDS' scans table class — BIDSTabularScans","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularScans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' scans table class — BIDSTabularScans","text":"","code":"# basic tabular <- BIDSTabularScans(   data.frame(     filename = c(       \"func/sub-control01_task-nback_bold.nii.gz\",       \"func/sub-control01_task-motor_bold.nii.gz\",       \"meg/sub-control01_task-rest_split-01_meg.nii.gz\"     ),     acq_time = c(       \"1877-06-15T13:45:30\",       \"1877-06-15T13:55:33\",       \"1877-06-15T12:15:27\"     )   ) )  # No ending Z, time is interpreted as local time # tabular uses UTC time tabular #> <BIDS Tabular>[BIDSTabular_scans] #> $meta: #> { #>   \"filename\": { #>     \"LongName\": \"Filename\", #>     \"Description\": \"[Required, string] Relative paths to files. There MUST be exactly one row for each file. Values in filename MUST be unique. This column must appear first in the file.\" #>   }, #>   \"acq_time\": { #>     \"LongName\": \"Acquisition Time\", #>     \"Description\": \"[Optional, string] Acquisition time refers to when the first data point in each run was acquired. Furthermore, if this header is provided, the acquisition times of all files from the same recording MUST be identical. Datetime format and their deidentification are described in Units. This column may appear anywhere in the file.\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/common-principles.html#units\" #>   } #> } #>  #> $content: #>                                           filename                  acq_time #>                                             <char>                <nanotime> #> 1:       func/sub-control01_task-nback_bold.nii.gz 1877-06-15T13:45:30+00:00 #> 2:       func/sub-control01_task-motor_bold.nii.gz 1877-06-15T13:55:33+00:00 #> 3: meg/sub-control01_task-rest_split-01_meg.nii.gz 1877-06-15T12:15:27+00:00   # convert existing tabular tabular <- BIDSTabular(   data.frame(     filename = \"func/sub-control01_task-nback_bold.nii.gz\",     acq_time = \"1877-06-15T13:45:30\"   ) ) tabular <- as_bids_tabular(tabular, cls = BIDSTabularScans) tabular #> <BIDS Tabular>[BIDSTabular] #> $meta: #> {} #>  #> $content: #>                                     filename            acq_time #>                                       <char>              <char> #> 1: func/sub-control01_task-nback_bold.nii.gz 1877-06-15T13:45:30  # save to tsv tsv <- file.path(tempdir(), \"scans.tsv\") paths <- save_bids_tabular(tabular, tsv)  print(paths) #> $table_path #> /tmp/RtmpxvWl5u/scans.tsv #>  #> $sidecar_path #> /tmp/RtmpxvWl5u/scans.json #>    # use base R to read read.table(tsv, header = TRUE, na.strings = \"n/a\") #>                                    filename            acq_time #> 1 func/sub-control01_task-nback_bold.nii.gz 1877-06-15T13:45:30  # get sidecar cat(readLines(paths$sidecar_path), sep = \"\\n\") #> {}   # clean up unlink(tsv) unlink(paths$sidecar_path)"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSessions.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' sessions table class — BIDSTabularSessions","title":"'BIDS' sessions table class — BIDSTabularSessions","text":"tabular containing list sessions metadata. class child class BIDSTabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#sessions-file.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' sessions table class — BIDSTabularSessions","text":"","code":"BIDSTabularSessions(content, meta = NULL)"},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' sessions table class — BIDSTabularSessions","text":"content, meta see BIDSTabular","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' sessions table class — BIDSTabularSessions","text":"BIDSTabularSessions instance inheriting BIDSTabular.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSessions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'BIDS' sessions table class — BIDSTabularSessions","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSTabularSessions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' sessions table class — BIDSTabularSessions","text":"","code":"# basic tabular <- BIDSTabularSessions(data.frame(   session_id = c(\"ses-predrug\", \"ses-postdrug\", \"ses-followup\"),   acq_time = c(     \"2009-06-15T13:45:30\",     \"2009-06-16T13:45:30\",     \"2009-06-17T13:45:30\"   ),   systolic_blood_pressure = c(120, 100, 110) )) tabular #> <BIDS Tabular>[BIDSTabular_sessions] #> $meta: #> { #>   \"session_id\": { #>     \"LongName\": \"Session ID\", #>     \"Description\": \"[Required, string] A session identifier of the form ses-<label>, matching a session found in the dataset. There MUST be exactly one row for each session. Values in session_id MUST be unique. This column must appear first in the file.\" #>   }, #>   \"acq_time\": { #>     \"LongName\": \"Acquisition Time\", #>     \"Description\": \"[Optional, string] Acquisition time refers to when the first data point of the first run was acquired. Datetime format and their deidentification are described in Units. This column may appear anywhere in the file.\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/common-principles.html#units\" #>   }, #>   \"pathology\": { #>     \"LongName\": \"Pathology\", #>     \"Description\": \"[Recommended, string or number] String value describing the pathology of the sample or type of control. When different from healthy, pathology SHOULD be specified. The pathology may be specified in either samples.tsv or sessions.tsv, depending on whether the pathology changes over time. This column may appear anywhere in the file.\" #>   } #> } #>  #> $content: #>      session_id                  acq_time systolic_blood_pressure #>          <char>                <nanotime>                   <num> #> 1:  ses-predrug 2009-06-15T13:45:30+00:00                     120 #> 2: ses-postdrug 2009-06-16T13:45:30+00:00                     100 #> 3: ses-followup 2009-06-17T13:45:30+00:00                     110   # convert existing tabular tabular <- BIDSTabular(   data.frame(     acq_time = \"2009-06-15T13:45:30\",     session_id = \"ses-predrug\",     systolic_blood_pressure = 120   ) ) tabular <- as_bids_tabular(tabular, cls = BIDSTabularSessions) tabular #> <BIDS Tabular>[BIDSTabular] #> $meta: #> {} #>  #> $content: #>               acq_time  session_id systolic_blood_pressure #>                 <char>      <char>                   <num> #> 1: 2009-06-15T13:45:30 ses-predrug                     120   # save to tsv tsv <- file.path(tempdir(), \"sessions.tsv\") paths <- save_bids_tabular(tabular, tsv)  print(paths) #> $table_path #> /tmp/RtmpxvWl5u/sessions.tsv #>  #> $sidecar_path #> /tmp/RtmpxvWl5u/sessions.json #>    # use base R to read read.table(tsv, header = TRUE, na.strings = \"n/a\") #>              acq_time  session_id systolic_blood_pressure #> 1 2009-06-15T13:45:30 ses-predrug                     120  # get sidecar cat(readLines(paths$sidecar_path), sep = \"\\n\") #> {}   # clean up unlink(tsv) unlink(paths$sidecar_path)"},{"path":"https://dipterix.org/bidsr/reference/BIDSURI.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' uniform resource indicator ('URI') class definition — BIDSURI","title":"'BIDS' uniform resource indicator ('URI') class definition — BIDSURI","text":"'BIDS' uniform resource indicator ('URI') class definition","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSURI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' uniform resource indicator ('URI') class definition — BIDSURI","text":"","code":"BIDSURI(uri)"},{"path":"https://dipterix.org/bidsr/reference/BIDSURI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' uniform resource indicator ('URI') class definition — BIDSURI","text":"uri 'URI' string another 'BIDS-URI' object","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSURI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' uniform resource indicator ('URI') class definition — BIDSURI","text":"BIDSURI instance.","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSURI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'BIDS' uniform resource indicator ('URI') class definition — BIDSURI","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/BIDSURI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' uniform resource indicator ('URI') class definition — BIDSURI","text":"","code":"# basic properties uri <- BIDSURI(\"bids::sub-01/fmap/sub-01_dir-AP_epi.nii.gz\") uri #> bids::sub-01/fmap/sub-01_dir-AP_epi.nii.gz uri$relative_path #> [1] \"sub-01/fmap/sub-01_dir-AP_epi.nii.gz\" uri$dataset_name #> [1] \"\"  # set the entire uri uri$format <- \"bids:deriv1:sub-02/anat/sub-02_T1w.nii.gz\" uri #> bids:deriv1:sub-02/anat/sub-02_T1w.nii.gz  # resolve BIDS URI (partial support)   # resolving a BIDS URI requires dataset_description.json dataset_description <- get_bids_dataset_description(   parent_directory = \"/path/to/BIDS/folder\",   Name = \"A dummy experiments\",   BIDSVersion = \"1.6.0\",    DatasetLinks = list(     \"deriv1\" = \"derivatives/derivative1\",     \"phantoms\" = \"file:///data/phantoms\"   ) )  uri <- BIDSURI(\"bids::sub-01/fmap/sub-01_dir-AP_epi.nii.gz\") resolved <- resolve_bids_path(uri, dataset_description)  # resolved absolute path print(resolved) #> /path/to/BIDS/folder/sub-01/fmap/sub-01_dir-AP_epi.nii.gz  # `raw_resolution` is relative to the parent directory where # `dataset_description.json` is stored attr(resolved, \"raw_resolution\") #> [1] \"sub-01/fmap/sub-01_dir-AP_epi.nii.gz\"  uri <- BIDSURI(\"bids:deriv1:sub-02/anat/sub-02_T1w.nii.gz\") resolved <- resolve_bids_path(uri, dataset_description)  print(resolved) #> /path/to/BIDS/folder/derivatives/derivative1/sub-02/anat/sub-02_T1w.nii.gz  attr(resolved, \"raw_resolution\") #> derivatives/derivative1/sub-02/anat/sub-02_T1w.nii.gz"},{"path":"https://dipterix.org/bidsr/reference/bids_project.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' project class — bids_project","title":"'BIDS' project class — bids_project","text":"'BIDS' project class","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' project class — bids_project","text":"","code":"BIDSProject(   path,   raw_data_relpath = \".\",   source_data_relpath = \"sourcedata\",   derivative_data_relpath = \"derivatives\",   strict = TRUE )  bids_project(   path,   raw_data_relpath = \".\",   source_data_relpath = \"sourcedata\",   derivative_data_relpath = \"derivatives\",   strict = TRUE )"},{"path":"https://dipterix.org/bidsr/reference/bids_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' project class — bids_project","text":"path absolute path 'BIDS' project directory; raw_data_relpath raw data-set path, relative (path); source_data_relpath source data-set path, relative (path); derivative_data_relpath derivative data-set path, relative (path); strict whether path needs exist; default TRUE","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' project class — bids_project","text":"'BIDS' project instance.","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_project.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'BIDS' project class — bids_project","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' project class — bids_project","text":"","code":"# Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE) if(!isFALSE(examples)) {    project_path <- file.path(examples, \"ieeg_epilepsy_ecog\")    project <- BIDSProject(     path = project_path,     raw_data_relpath = \".\",     derivative_data_relpath = \"derivatives\"   )    project  }"},{"path":"https://dipterix.org/bidsr/reference/bids_property.html","id":null,"dir":"Reference","previous_headings":"","what":"'S7' property for 'BIDS' classes — bids_property","title":"'S7' property for 'BIDS' classes — bids_property","text":"Used property generate properties constraints class generators new_bids_class.","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'S7' property for 'BIDS' classes — bids_property","text":"","code":"bids_property(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   final = FALSE,   ... )  bids_property_optional(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   max_len = 1L,   ... )  bids_property_required(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   len = 1L,   ... )  bids_property_prohibited(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ... )  bids_property_recommended(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   max_len = 1L )  bids_property_deprecated(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   max_len = 1L )  bids_property_character(   name,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_character )  bids_property_collapsed_character(   name,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   collapse = \" \",   ...,   class = S7::class_character )  bids_property_choice(   name,   choices,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   ...,   class = S7::class_character )  bids_property_numeric(   name,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_numeric )  bids_property_integerish(   name,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_numeric )  bids_property_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_list )  bids_property_named_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = list(),   ...,   class = S7::class_list )  bids_property_unnamed_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_list )  bids_property_entity_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = list(),   ...,   class = S7::class_list,   identifier = NULL,   schema_key = NA,   bids_version = current_bids_version() )  bids_property_tabular_column_descriptor_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = list(),   ...,   class = S7::class_list )  bids_property_data_frame(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = data.frame(),   ...,   class = S7::class_data.frame )  bids_property_tabular_content(   name = \"content\",   setter = NULL,   ...,   name_meta = \"meta\",   lower_case_column_names = FALSE )  bids_property_tabular_meta(   name = \"meta\",   setter = NULL,   preset = NULL,   ...,   name_content = \"content\" )"},{"path":"https://dipterix.org/bidsr/reference/bids_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'S7' property for 'BIDS' classes — bids_property","text":"name required, string, name property class 'S7' class getter, setter, validator, default see new_property final whether property final initialized; default false; properties altered ... passed methods max_len type='optional', maximum vector length property; default 1 len type='required', vector length property; default 1 type type property, can 'required', 'optional', 'prohibited' collapse collapsed property, passed paste choices properties can chosen given choices; character strings candidate choices. identifier \"data_type/suffix\" combination get entity rules schema_key 'BIDS' schema key explicit entity rules needed bids_version 'BIDS' version query entity rules name_meta tabular content, name meta property; default \"meta\" lower_case_column_names tabular content, whether convert column names lower case; default FALSE preset list preset meta data; default NULL name_content tabular meta, name content property; default \"content\"","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_property.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'S7' property for 'BIDS' classes — bids_property","text":"functions call new_property internally.","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_property.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'S7' property for 'BIDS' classes — bids_property","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_property.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'S7' property for 'BIDS' classes — bids_property","text":"","code":"MyClass <- new_bids_class(   name = \"MyClass\",   properties = list(     str = bids_property_character(       name = \"str\",       type = \"required\",       validator = function(value) {         if (length(value) == 1 &&             !isTRUE(is.na(value)) && nzchar(value)) {           return()         }         return(sprintf(\"Invalid `str`: %s\", paste(sQuote(value), collapse = \", \")))       }     )   ),   methods = list(     # read-only methods     format = function(self, ...) {       sprintf(\"MyClass@str -> %s\", self$str)     }   ) )  instance <- MyClass(str = \"aha\") instance #> MyClass@str -> aha  instance$str <- \"111\" instance #> MyClass@str -> 111   # what if you enter illegal values  try({   MyClass(str = \"\") }) #> Error : <bidsr::MyClass> object properties are invalid: #> - @str Invalid `str`: ‘’  try({   MyClass(str = NA_character_) }) #> Error : <bidsr::MyClass> object properties are invalid: #> - @str Contains missing values (element 1)  try({   MyClass(str = 1) }) #> Error : <bidsr::MyClass> object properties are invalid: #> - @str must be <character>, not <double>"},{"path":"https://dipterix.org/bidsr/reference/bids_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' subject class — bids_subject","title":"'BIDS' subject class — bids_subject","text":"'BIDS' subject class","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' subject class — bids_subject","text":"","code":"BIDSSubject(project, subject_code, ..., strict = \"raw\")  bids_subject(project, subject_code, ..., strict = \"raw\")"},{"path":"https://dipterix.org/bidsr/reference/bids_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' subject class — bids_subject","text":"project 'BIDS' project instance, see BIDSProject, path 'BIDS' project subject_code character, subject code without leading 'sub-'. subject code, trimming leading entity key, contain additional dash ('-') ... passed constructor BIDSProject, project character string strict whether check subject folders exist, can logical characters; strict character strings, choices can 'raw' (checking raw-data directory) /'source' ( source-data directory); strict=TRUE equivalent checking ; default 'raw'. checks derivatives.","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' subject class — bids_subject","text":"'BIDS' subject instance.","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_subject.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'BIDS' subject class — bids_subject","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/bids_subject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' subject class — bids_subject","text":"","code":"# Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE) if(!isFALSE(examples)) {    project_path <- file.path(examples, \"ieeg_epilepsy_ecog\")    project <- BIDSProject(     path = project_path,     raw_data_relpath = \".\",     derivative_data_relpath = \"derivatives\"   )     subject <- BIDSSubject(project = project, subject_code = \"ecog01\",                           strict = FALSE)    storage_root <- resolve_bids_path(subject, storage = \"raw\")    query_bids(subject, \"ieeg\")  }"},{"path":"https://dipterix.org/bidsr/reference/bidsr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bidsr: A Brain Imaging Data Structure ('BIDS') Parser — bidsr-package","title":"bidsr: A Brain Imaging Data Structure ('BIDS') Parser — bidsr-package","text":"Parse read files comply brain imaging data structure, 'BIDS' format, see publication Gorgolewski, K., Auer, T., Calhoun, V. et al. (2016) doi:10.1038/sdata.2016.44 . Provides query functions extract check 'BIDS' entity information (subject, session, task, etc.) file paths suffixes according specification. package developed used reproducible analysis visualization intracranial electroencephalography, 'RAVE', see Magnotti, J. F., Wang, Z., Beauchamp, M. S. (2020) doi:10.1016/j.neuroimage.2020.117341 ; see 'citation(\"bidsr\")' details attributions.","code":""},{"path":[]},{"path":"https://dipterix.org/bidsr/reference/bidsr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bidsr: A Brain Imaging Data Structure ('BIDS') Parser — bidsr-package","text":"Maintainer: Zhengjia Wang dipterix.wang@gmail.com (ORCID) contributors: Trustees University Pennsylvania (files package unless explicitly stated file listed 'Copyright' section .) [copyright holder]","code":""},{"path":"https://dipterix.org/bidsr/reference/download_bids_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Download 'BIDS' example data-sets — download_bids_examples","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"See https://github.com/bids-standard/bids-examples full repository.","code":""},{"path":"https://dipterix.org/bidsr/reference/download_bids_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"","code":"download_bids_examples(test = FALSE)"},{"path":"https://dipterix.org/bidsr/reference/download_bids_examples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"test logical; default FALSE, downloads example repository files missing; alternative choice TRUE, return FALSE files missing","code":""},{"path":"https://dipterix.org/bidsr/reference/download_bids_examples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"local path example repository exists test=FALSE; simply FALSE repository missing test=TRUE.","code":""},{"path":"https://dipterix.org/bidsr/reference/download_bids_examples.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/download_bids_examples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"","code":"download_bids_examples(test = TRUE) #> [1] FALSE"},{"path":"https://dipterix.org/bidsr/reference/get_bids_entity.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'BIDS' entity values from file — get_bids_entity","title":"Get 'BIDS' entity values from file — get_bids_entity","text":"Get 'BIDS' entity values file","code":""},{"path":"https://dipterix.org/bidsr/reference/get_bids_entity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'BIDS' entity values from file — get_bids_entity","text":"","code":"get_bids_entity(x, key, value_only = TRUE, ifnotfound = NULL)  get_bids_entity_rules(x)"},{"path":"https://dipterix.org/bidsr/reference/get_bids_entity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 'BIDS' entity values from file — get_bids_entity","text":"x 'BIDS' file path parsed object; see 'Examples' key entity key value_only whether return value ; default true; set FALSE return entity object ifnotfound default value return entity missing","code":""},{"path":"https://dipterix.org/bidsr/reference/get_bids_entity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 'BIDS' entity values from file — get_bids_entity","text":"'BIDS' entity value object, depending value_only","code":""},{"path":"https://dipterix.org/bidsr/reference/get_bids_entity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get 'BIDS' entity values from file — get_bids_entity","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/get_bids_entity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get 'BIDS' entity values from file — get_bids_entity","text":"","code":"# Quick usage get_bids_entity(\"ieeg/sub-YAB_ses-01_task-AV_ieeg.mat\", \"sub\") #> [1] \"YAB\"  get_bids_entity_rules(\"ieeg/sub-YAB_ses-01_task-AV_channels.tsv\") #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"required\" \"label\"    #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"optional\" \"index\"    #>  #> $desc #> [1] \"optional\" \"label\"    #>   # Full usage parsed <- parse_path_bids_entity(     path = \"ieeg/sub-YAB_ses-01_task-AV_channels.tsv\")  parsed$get_bids_entity(\"sub\") #> [1] \"YAB\" parsed$get_bids_entity_rules() #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"required\" \"label\"    #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"optional\" \"index\"    #>  #> $desc #> [1] \"optional\" \"label\"    #>   parsed$description #> [1] \"Defined via datatype+suffix: `ieeg/channels` (BIDS version: 1.10.1)\" parsed$entities #> $sub #> sub-YAB #>  #> $ses #> ses-01 #>  #> $task #> task-AV #>"},{"path":"https://dipterix.org/bidsr/reference/new_bids_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new bidsr class definition — new_bids_class","title":"Create new bidsr class definition — new_bids_class","text":"default, generated classes inherit BIDSClassBase, provides S3 generics","code":""},{"path":"https://dipterix.org/bidsr/reference/new_bids_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new bidsr class definition — new_bids_class","text":"","code":"new_bids_class(   name,   parent = BIDSClassBase,   abstract = FALSE,   hidden_names = NULL,   properties = NULL,   methods = NULL,   validator = NULL,   constructor = NULL )"},{"path":"https://dipterix.org/bidsr/reference/new_bids_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new bidsr class definition — new_bids_class","text":"name string, required, name class parent parent class definition, needs 'S7' class abstract whether class abstract (TRUE) (FALSE) hidden_names vector string, names properties /methods whose presence hidden users; affect `$` operator, names function. hidden properties methods queried via two ways. However, properties can still accessible via `@` operator properties named list names property names can queried via `$` `@` operators methods read-methods class, format print; method function, arguments start self (instance method) cls (class method). cases, changes made object carrier method function exits. changes properties, use setter functions property. validator validate function; see new_class constructor function custom constructor; see parameter 'constructor' new_class details. Basically custom constructor call S7::new_object() create 'S7' object. first argument instance parent class (used). subsequent arguments used set properties.","code":""},{"path":"https://dipterix.org/bidsr/reference/new_bids_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new bidsr class definition — new_bids_class","text":"S7 object inheriting 'bidsr::BIDSClassBase' class.","code":""},{"path":"https://dipterix.org/bidsr/reference/new_bids_class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create new bidsr class definition — new_bids_class","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/new_bids_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new bidsr class definition — new_bids_class","text":"","code":"# ---- Basic usage --------------------------------------------  Range <- new_bids_class(   \"Range\",   properties = list(     start = bids_property_numeric(\"start\", \"required\"),     end = bids_property_numeric(\"end\", \"optional\")   ),   validator = function(self) {     if(length(self@end) && self@end < self@start) {       \"@end must be great than or equal to @start\"     }   } )   r <- Range(start = 10) r #> <bidsr::Range> #>  @ start: num 10 #>  @ end  : int(0)  # get and set properties with @ or $ r$start #> [1] 10 r$end <- 40 r$end #> [1] 40  try(Range(start = c(10, 15), end = 20)) #> Error : <bidsr::Range> object properties are invalid: #> - @start Must have length 1, but has length 2 try(Range(start = 15, end = 10)) #> Error : <bidsr::Range> object is invalid: #> - @end must be great than or equal to @start    # ---- hide properties and attributes ------------------------- MyClass <- new_bids_class(   name = \"MyClass\",   properties = list(     str = bids_property_character(       name = \"str\", type = \"required\"),     hidden_prop = bids_property_character(\"hidden_prop\")   ),   methods = list(     # read-only methods     format = function(self, ...) {       sprintf(\"MyClass@str -> %s\", self$str)     },     hidden_method = function(self) {       \"Nonononono\"     }   ),   hidden_names = c(\"hidden_method\", \"hidden_prop\") )  x <- MyClass(str = \"a\") x #> MyClass@str -> a  # hidden names will not be displayed names(x) #> [1] \"str\"    \"format\" as.list(x) #> $str #> [1] \"a\" #>   # however, then can still be queried x$hidden_prop #> character(0) x$hidden_method() #> [1] \"Nonononono\""},{"path":"https://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"Low-level function generate file name definitions entity constraints; use parse_path_bids_entity instead. specification https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames.","code":""},{"path":"https://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"","code":"new_bids_entity_file_class(   name,   data_type,   suffix,   schema_key = NA,   bids_version = current_bids_version() )"},{"path":"https://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"name class name data_type 'BIDS' file data type suffix file suffix schema_key schema key explicit entity rules required bids_version 'BIDS' version query entity rules","code":""},{"path":"https://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"class definition proper entity constraints according data_type-suffix combinations, specific schema_key. function rarely needs called directly unless schema key missing specification.","code":""},{"path":"https://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"","code":"# see full table at BIDS specification # en/stable/appendices/entity-table.html#behavioral-data # # generate class definition for \"Behavioral Data\" # Entity: Subject Session Task Acquisition Run Recording # Format: #   sub-<label> ses-<label> task-<label> #   acq-<label> run-<index> recording-<label> # suffix: events # requirement: REQUIRED OPTIONAL REQUIRED OPTIONAL OPTIONAL #   # ---- Basic usage ---------------------------------------- behavior_event_file_def <- new_bids_entity_file_class(   name = \"BIDSEntityFile_beh_events\",   data_type = \"beh\",   suffix = \"events\" )  file1 <- behavior_event_file_def(   parent_directory = \"sub-001/beh\",   sub = \"001\", task = \"test\", .extension = \"tsv\")  print(file1) #> sub-001/beh/sub-001_task-test_events.tsv  file.path(\"root/to/path\", file1) #> [1] \"root/to/path/sub-001/beh/sub-001_task-test_events.tsv\"  # How the entities are parsed? file1$description #> [1] \"Defined via datatype+suffix: `beh/events` (BIDS version: 1.10.1)\"  # get entity values file1$get_bids_entity(\"task\") #> [1] \"test\"  # parent directory file1$parent_directory #> [1] \"sub-001/beh\"  file1$entities$run$value #> NULL  # set entity values file1$entities$run <- 2 file1$entities$run$index_format <- \"%03d\"  file1$entities$blahblah <- \"haha\"  file1 #> sub-001/beh/sub-001_task-test_run-002_blahblah-haha_events.tsv  # Relaxed entity rules generated from schema # `rules.files.raw.task.events` and # `rules.files.deriv.preprocessed_data.task_events_common` get_bids_entity_rules(file1) #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"required\" \"label\"    #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"optional\" \"index\"    #>  #> $desc #> [1] \"optional\" \"label\"    #>   # ---- Using BIDS schema key for specific version ------------------------ bids_version <- \"1.10.1\" behavior_event_file_def <- new_bids_entity_file_class(   name = \"BIDSEntityFile_beh_events\",   data_type = \"beh\",   suffix = \"events\",   schema_key = \"rules.files.raw.task.events\",   bids_version = bids_version )  file2 <- behavior_event_file_def(   parent_directory = \"sub-001/beh\",   sub = \"001\", task = \"test\", .extension = \"tsv\")  file2$description #> [1] \"Defined via schema_key: `rules.files.raw.task.events` (BIDS version: 1.10.1)\"  # `desc` is no longer listed in the rules here get_bids_entity_rules(file2) #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"required\" \"label\"    #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"optional\" \"index\"    #>"},{"path":"https://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse 'BIDS' entities from file path — parse_path_bids_entity","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"Parse 'BIDS' entities file path","code":""},{"path":"https://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"","code":"parse_path_bids_entity(   path,   auto_cache = TRUE,   schema_key = NA,   bids_version = current_bids_version() )"},{"path":"https://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"path path entity file, recommended input absolute path relative path 'BIDS' root directory auto_cache whether automatically cache class definition speed next time; default true schema_key 'BIDS' schema key explicit entity rules needed bids_version 'BIDS' version query entity rules","code":""},{"path":"https://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"'BIDSEntityFile' instance.","code":""},{"path":"https://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"","code":"path <- \"anat/sub-01_chunk-001_t1w.nii.gz\"  # --- parse ------------------------------------------------ parsed_filename <- parse_path_bids_entity(path) parsed_filename #> anat/sub-01_chunk-001_t1w.nii.gz  parsed_filename$get_bids_entity(\"sub\") #> [1] \"01\"  # alternatively parsed_filename$entities$sub$value #> [1] \"01\"  # data type is `anat` imaging parsed_filename$data_type #> [1] \"anat\"  # data is T1-weighted parsed_filename$suffix #> [1] \"t1w\"  # --- usage ------------------------------------------------ # use it as character file.path(\"/path/to/bids/dir/sub-01\", parsed_filename) #> [1] \"/path/to/bids/dir/sub-01/anat/sub-01_chunk-001_t1w.nii.gz\"  # modify parsed_filename$entities$task <- \"special\"  # new file path: anat/sub-01_task-special_chunk-001_T1w.nii.gz parsed_filename #> anat/sub-01_chunk-001_task-special_t1w.nii.gz  # ---- schema ----------------------------------------------- # get BIDS entity rules parsed_filename$get_bids_entity(\"task\") #> [1] \"special\"  # get entity rules parsed_filename$get_bids_entity_rules() #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"optional\" \"label\"    #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $ce #> [1] \"optional\" \"label\"    #>  #> $rec #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"optional\" \"index\"    #>  #> $echo #> [1] \"optional\" \"index\"    #>  #> $part #> [1] \"optional\" \"label\"    #>  #> $space #> [1] \"optional\" \"label\"    #>  #> $chunk #> [1] \"optional\" \"index\"    #>  #> $res #> [1] \"optional\" \"label\"    #>  #> $den #> [1] \"optional\" \"label\"    #>  #> $desc #> [1] \"optional\" \"label\"    #>"},{"path":"https://dipterix.org/bidsr/reference/query_bids.html","id":null,"dir":"Reference","previous_headings":"","what":"Query 'BIDS' — query_bids","title":"Query 'BIDS' — query_bids","text":"Query 'BIDS' project analyze files","code":""},{"path":"https://dipterix.org/bidsr/reference/query_bids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query 'BIDS' — query_bids","text":"","code":"query_bids(x, search_params, env = parent.frame(), ...)"},{"path":"https://dipterix.org/bidsr/reference/query_bids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query 'BIDS' — query_bids","text":"x 'BIDS' objects subject search_params searching parameters, leave blank see help documentations env resolve selectors ... passed -stream methods","code":""},{"path":"https://dipterix.org/bidsr/reference/query_bids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query 'BIDS' — query_bids","text":"data table query results","code":""},{"path":"https://dipterix.org/bidsr/reference/query_bids.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Query 'BIDS' — query_bids","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. S7 set_props, valid_eventually","code":""},{"path":"https://dipterix.org/bidsr/reference/resolve_bids_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve path of a 'BIDS' object — resolve_bids_path","title":"Resolve path of a 'BIDS' object — resolve_bids_path","text":"Resolve path 'BIDS' object","code":""},{"path":"https://dipterix.org/bidsr/reference/resolve_bids_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve path of a 'BIDS' object — resolve_bids_path","text":"","code":"resolve_bids_path(x, ...)"},{"path":"https://dipterix.org/bidsr/reference/resolve_bids_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve path of a 'BIDS' object — resolve_bids_path","text":"x 'BIDS' object project subject ... passed generic methods","code":""},{"path":"https://dipterix.org/bidsr/reference/resolve_bids_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve path of a 'BIDS' object — resolve_bids_path","text":"character resolved path","code":""},{"path":"https://dipterix.org/bidsr/reference/resolve_bids_path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Resolve path of a 'BIDS' object — resolve_bids_path","text":"Zhengjia Wang","code":""},{"path":"https://dipterix.org/bidsr/reference/resolve_bids_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve path of a 'BIDS' object — resolve_bids_path","text":"","code":"# ---- BIDS project ------------------------------------------------   # This example needs extra demo files # Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE)  if(!isFALSE(examples)) {    project_path <- file.path(examples, \"ieeg_epilepsy_ecog\")    project <- BIDSProject(     path = project_path,     raw_data_relpath = \".\",     derivative_data_relpath = \"derivatives\"   )    # project root   resolve_bids_path(project, storage = \"root\")    # raw-data directory   resolve_bids_path(project, storage = \"raw\")    # source-data directory   resolve_bids_path(project, storage = \"source\")    # derivatives directory   resolve_bids_path(project, storage = \"derivative\")    # get relative directory to project root   resolve_bids_path(project, storage = \"derivative\",                     relative_to_project = TRUE)  }  # ---- BIDS subject ------------------------------------------------   # This example needs extra demo files # Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE)  if(!isFALSE(examples)) {    project_path <- file.path(examples, \"ieeg_epilepsy_ecog\")    subject <- BIDSSubject(project = project_path,                           subject_code = \"ecog01\")    # raw-data directory   resolve_bids_path(subject, storage = \"raw\")    # source-data directory   resolve_bids_path(subject, storage = \"source\")    # derivatives directory to freesurfer   resolve_bids_path(subject, storage = \"derivative\",                     prefix = \"freesurfer\")    # get relative directory to project root   resolve_bids_path(subject, storage = \"raw\",                     relative_to_project = TRUE)  }  # ---- BIDS URI ----------------------------------------------------  # create a BIDS URI uri <- BIDSURI(\"bids::sub-01/fmap/sub-01_dir-AP_epi.nii.gz\")  # resolving a BIDS URI requires dataset_description.json data_description <- get_bids_dataset_description(   parent_directory = \"/path/to/BIDS/folder\",   Name = \"A dummy experiments\",   BIDSVersion = \"1.6.0\",    DatasetLinks = list(     \"deriv1\" = \"derivatives/derivative1\",     \"phantoms\" = \"file:///data/phantoms\"   ) )  resolve_bids_path(uri, data_description) #> /path/to/BIDS/folder/sub-01/fmap/sub-01_dir-AP_epi.nii.gz"},{"path":"https://dipterix.org/bidsr/news/index.html","id":"bidsr-010","dir":"Changelog","previous_headings":"","what":"bidsr 0.1.0","title":"bidsr 0.1.0","text":"CRAN release: 2025-04-02 Initial CRAN submission. Implemented “milestone 1” (see Roadmap.md)","code":""}]
