[{"path":"http://dipterix.org/bidsr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Zhengjia Wang Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"http://dipterix.org/bidsr/Roadmap.html","id":"phase-1-read-bids-data","dir":"","previous_headings":"Roadmap","what":"Phase 1: read BIDS data","title":"NA","text":"Implement basic data structures (classes) map BIDS raw & source dataset. Something like:","code":"# Project bproj = bidsr::bids_project(\"/path/to/project/folder\")  bproj$description  # dataset_description.json bproj$participants # participants.json  # Subject bsubj = bproj$get_subject(\"subject_label\") bsubj = bidsr::as_bids_subject(\"/path/to/subject/folder\") bsubj = bidsr::as_bids_subject(\"subject_label\", project = <string/bids_project>)  bsubj$rawdata bsubj$sourcedata bsubj$derivatives bsubj$phenotype bsubj$stimuli  # BIDS compliant data container rawdata = bsubj$rawdata rawdata$bids_compliant  # TRUE ieegdata = rawdata$ieeg ieegdata$data_type # 'ieeg'  # Query data query_result = bids_query(   bproj, sub = \"01\", data_type = \"ieeg\",   task = ... ) query_result = bids_query(   ieegdata,    # implicit `bproj`, `sub-01`, `ieeg`,   acq = ... ) query_result = bproj[sub = \"01\", ...]  # Snapshot query data as.data.frame(query_result)    # Dataset x entities + suffix query_result$count(\"channel\")  # How many *_channel results (prefix-only) query_result$suffixes  ieeg_data <- query_result$ieeg[[1]]  # get the first wrapper containing iEEG signals  # BIDS data file ieeg_data$metadata # combined tsv + json ieeg_data$path     # resolved path, BIDS URI, original path bids_data_content(ieeg_data) # load data into memory"},{"path":"http://dipterix.org/bidsr/Roadmap.html","id":"phase-2-migrate-rave-into-bids-derivative-path-so-rave-can-read-form-bids","dir":"","previous_headings":"Roadmap","what":"Phase 2: migrate RAVE into BIDS derivative path so RAVE can read form BIDS","title":"NA","text":"RAVE raveio::RAVEProject finds dataset_description.json folder, RAVE activates BIDS mode project. following interface provided function generate dataset_description.json participants.tsv missing. create another dataset_description.json bids_root/derivatives/rave. description derivatives folder include critical RAVE information (\"DatasetLinks\"). phase also includes re-wiring RAVE subject directory tree. goal create directory tree BIDS-compliant RAVE compatible. achieve goal, may need create “rewiring” table subject derivative folder. format might look like : keys start rave:, followed keys raveio::rave_directories, relative path. \"rave:imaging_path:fs\" subject raw_dir/<label>/rave-imaging/fs path, mapped BIDS freesurfer/sub-<label> folder. \"rave:data_path:power\" wired \"\", means re-wiring power path remain unchanged. \"rave:data_path:phase\" wired null, meaning data missing throw error users try use . rewiring look-table can used future indicate files within BIDS also remote links (URL, AWS S3, …)","code":"proj = raveio::RAVEProject$new(...) proj$convert_to_bids()    # phase 2: activates BIDS mode for this                            #   (empty) RAVE project or existing BIDS project                           # phase 3: convert this folder to BIDS-compliant {   ...   \"SourceDatasets\": [     { \"URL\" : \"../..\" }   # or \"../../rawdata\"; see \"Source vs. raw vs. derived data\"   ],   \"DatasetLinks\" : {     \"bids-root\": \"../..\", # indicate the root of the BIDS dataset directory     \"freesurfer-root\": \"../../derivatives/freesurfer\"     } } {   # BIDS-URI   \"rave:imaging_path:fs\" : \"bids:freesurfer-root:freesurfer/sub-<label>\",    # No-mapping (this file is original)   \"rave:data_path:power\" : \"\"    # No-mapping (this file is missing, throw error)   \"rave:data_path:phase\" : null }"},{"path":"http://dipterix.org/bidsr/Roadmap.html","id":"phase-3-allow-rave-to-write-to-bids","dir":"","previous_headings":"Roadmap","what":"Phase 3: Allow RAVE to write to BIDS","title":"NA","text":"BIDS mode, raw data, BIDS folder automatically loaded BIDS raw data processing. proj$convert_to_bids() also converts existing non-BIDS compliant data set BIDS-compliant one. bidsr::bids_validate function implemented (using official python package). Implement new raveio::archive_subject allows users choose subset data needed analysis, files placeholders. Data tools also check missing file links, give reports (rebuild entire RAVE project folder?)","code":""},{"path":"http://dipterix.org/bidsr/articles/aaa-get-started.html","id":"overview-of-a-bids-project","dir":"Articles","previous_headings":"","what":"Overview of a BIDS project","title":"Get Started","text":"Let’s inspect project ieeg_motorMiller2007 official BIDS example repository:","code":"project_path <- file.path(example_root, \"ieeg_motorMiller2007\") project <- bids_project(path = project_path)  print(project) #> <ieeg_motorMiller2007>[bids_project] at: #>   /home/runner/.cache/R/bidsr/bids-examples/bids-examples-master/ieeg_motorMiller2007 #>   - raw-data path: . #>   - source-data path: sourcedata #>   - derivative path: derivatives #> +- Descriptions: --------------------------------------------------------------- #> | These are the cue-based hand & tongue movement data described in the #> | Journal of Neuroscience 2007 Manuscript titled: “Spectral Changes in #> | Cortical Surface Potentials during Motor Movement”. The patients only #> | partially overlap with the patients from that study. #> |  #> | Please keep in mind that these anonymized data are from real patients who #> | donated time in a difficult period of their lives to advance our #> | understanding of the brain. Any publication involving these data MUST #> | include the following in the methods section of the manuscript, without #> | modification: #> |  #> | Ethics statement: All patients participated in a purely voluntary manner, #> | after providing informed written consent, under experimental protocols #> | approved by the Institutional Review Board of the University of Washington #> | (#12193). All patient data was anonymized according to IRB protocol, in #> | accordance with HIPAA mandate. It was made available through the XXXXName #> | of database/manuscriptXXX repository [insert citation here], freely #> | available at XXXURL. All patient data was anonymized according to IRB #> | protocol, in accordance with HIPAA mandate. These data originally appeared #> | in the manuscript “Spectral Changes in Cortical Surface Potentials during #> | Motor Movement” published in Journal of Neuroscience in 2007 [Insert #> | Embedded Citation for the Manuscript Here – e.g. Endnote, BibTex]. #> |  #> | Kai Miller, Stanford University, 2015 kai.miller@stanford.edu, #> | kjmiller@gmail.com"},{"path":"http://dipterix.org/bidsr/articles/aaa-get-started.html","id":"file-dataset_description-json","dir":"Articles","previous_headings":"Overview of a BIDS project","what":"File dataset_description.json","title":"Get Started","text":"top-level data description can parsed via obtain values, use $ operator (. Python):","code":"description <- project$get_dataset_description()  print(description) #> { #>   \"Name\": \"Miller_et_al_2007_Jneurosci\", #>   \"BIDSVersion\": \"1.0.2\", #>   \"DatasetType\": \"raw\", #>   \"License\": \"This dataset is made available under the Public Domain Dedication and License \\\\nv1.0, whose full text can be found at \\\\nhttp://www.opendatacommons.org/licenses/pddl/1.0/. \\\\nWe hope that all users will follow the ODC Attribution/Share-Alike \\\\nCommunity Norms (http://www.opendatacommons.org/norms/odc-by-sa/); \\\\nin particular, while not legally required, we hope that all users \\\\nof the data have to include the ethics statement (see README) and acknowledge ... in any publications.\", #>   \"Authors\": [ #>     \"Kai J. Miller\", #>     \"Dora Hermes\" #>   ], #>   \"Acknowledgements\": \"Kai J. Miller, Jeffrey G. Ojemann\", #>   \"HowToAcknowledge\": \"These are the cue-based hand & tongue movementdata described in the Journal of Neuroscience 2007 Manuscript titled: Spectral Changes in Cortical Surface Potentials during Motor Movement.The patients only partially overlap with the patients from that study.These anonymized data are from real patients who donated time in a difficultperiod of their lives to advance our understanding of the brain. Anypublication involving these data MUST include the following in the methodssection of the manuscript, without modification: Ethics statement: All patients participated in a purely voluntary manner,after providing informed written consent, under experimental protocols approved by the Institutional Review Board of the University of Washington (#12193).All patient data was anonymized according to IRB protocol, in accordance with HIPAAmandate. It was made available through the XXXXName of database/manuscriptXXX repository [https://purl.stanford.edu/zk881ps0522], freely available at XXXURL. All patient datawas anonymized according to IRB protocol, in accordance with HIPAA mandate. These data originally appeared in the manuscript, Spectral Changes in Cortical Surface Potentials during Motor Movement, published in Journal of Neuroscience in 2007 [Insert Embedded Citation for the Manuscript Here, e.g. Endnote, BibTex].\", #>   \"Funding\": \"NSF 0642848\", #>   \"ReferencesAndLinks\": [ #>     \"Miller et al., 2007 JNeurosci. Spectral Changes in Cortical Surface Potentials during Motor Movement.\", #>     \"link to original raw data: https://purl.stanford.edu/zk881ps0522\" #>   ], #>   \"GeneratedBy\": [ #>  #>   ] #> } description$BIDSVersion #> [1] \"1.0.2\""},{"path":"http://dipterix.org/bidsr/articles/aaa-get-started.html","id":"file-participants-tsv","dir":"Articles","previous_headings":"Overview of a BIDS project","what":"File participants.tsv","title":"Get Started","text":"File participants.tsv top-level tabular lists subjects. file can queried via method get_participants: Alternatively, can read tsv file as_bids_tabular","code":"participants <- project$get_participants() participant_path <- file.path(project, \"participants.tsv\") as_bids_tabular(participant_path) #> <BIDS Tabular>[bids_tabular] #> $meta: #> {} #>  #> $content: #>     participant_id #>             <char> #>  1:         sub-bp #>  2:         sub-ca #>  3:         sub-cc #>  4:         sub-de #>  5:         sub-fp #> ---                #> 12:         sub-rh #> 13:         sub-rr #> 14:         sub-ug #> 15:         sub-wc #> 16:         sub-zt"},{"path":"http://dipterix.org/bidsr/articles/aaa-get-started.html","id":"instantiate-a-bids-subject","dir":"Articles","previous_headings":"","what":"Instantiate a BIDS subject","title":"Get Started","text":"Given project path instance, BIDS subject can instantiated via BIDS subjects entity key sub- marks subject code, example, sub-bp means subject bp, hence entity key sub- can omitted, bidsr accepts input subject_code = \"bp\". project instantiated, path also acceptable, check alternative:","code":"subject <- bids_subject(   project = project,    subject_code = \"sub-bp\" )  print(subject) #> <BIDS Subject> `sub-bp` (project `ieeg_motorMiller2007`) subject <- bids_subject(   project = project_path,    subject_code = \"bp\" )"},{"path":"http://dipterix.org/bidsr/articles/aaa-get-started.html","id":"raw-source-or-derivative-data","dir":"Articles","previous_headings":"Instantiate a BIDS subject","what":"Raw, source, or derivative data","title":"Get Started","text":"BIDS mainly focuses regulating raw data, however, also supports formatting source data derivatives. corresponding paths can queried via get_path method. query root path raw/source data, derivatives, please specify derivative names, example:","code":"subject$get_path(\"raw\") #> /home/runner/.cache/R/bidsr/bids-examples/bids-examples-master/ieeg_motorMiller2007/sub-bp subject$get_path(\"source\") #> /home/runner/.cache/R/bidsr/bids-examples/bids-examples-master/ieeg_motorMiller2007/sourcedata/sub-bp subject$get_path(\"derivative\", derivative_prefix = \"freesurfer\") #> /home/runner/.cache/R/bidsr/bids-examples/bids-examples-master/ieeg_motorMiller2007/derivatives/freesurfer/sub-bp"},{"path":"http://dipterix.org/bidsr/articles/aaa-get-started.html","id":"query-subject-files-by-types","dir":"Articles","previous_headings":"Instantiate a BIDS subject","what":"Query subject files by types","title":"Get Started","text":"official BIDS extensions support various data types, anat, func, meg, eeg, ieeg, etc. query data files type, use query_modality method: first column contains list file instances. ’s example read ACPC electrode coordinates:","code":"ieeg_table <- subject$query_modality(\"ieeg\") ieeg_table #>           parsed data_type      suffix extension    sub    ses    acq     space #>           <AsIs>    <char>      <char>    <char> <char> <char> <lgcl>    <char> #>  1: sub-bp/s....      ieeg coordsystem      json     bp     01     NA      ACPC #>  2: sub-bp/s....      ieeg  electrodes       tsv     bp     01     NA      ACPC #>  3: sub-bp/s....      ieeg coordsystem      json     bp     01     NA Talairach #>  4: sub-bp/s....      ieeg  electrodes       tsv     bp     01     NA Talairach #>  5: sub-bp/s....      ieeg    channels       tsv     bp     01     NA      <NA> #>  6: sub-bp/s....      ieeg      events       tsv     bp     01     NA      <NA> #>  7: sub-bp/s....      ieeg        ieeg       eeg     bp     01     NA      <NA> #>  8: sub-bp/s....      ieeg        ieeg      json     bp     01     NA      <NA> #>  9: sub-bp/s....      ieeg        ieeg      vhdr     bp     01     NA      <NA> #> 10: sub-bp/s....      ieeg        ieeg      vmrk     bp     01     NA      <NA> #>       task    run #>     <char> <char> #>  1:   <NA>   <NA> #>  2:   <NA>   <NA> #>  3:   <NA>   <NA> #>  4:   <NA>   <NA> #>  5:  motor      1 #>  6:  motor      1 #>  7:  motor     01 #>  8:  motor     01 #>  9:  motor     01 #> 10:  motor     01 subset_result <- subset(ieeg_table, space == \"ACPC\" & suffix == \"electrodes\") path_parsed <- subset_result$parsed[[1]] print(path_parsed) #> sub-bp/ses-01/ieeg/sub-bp_ses-01_space-ACPC_electrodes.tsv  electrode_path <- file.path(project, path_parsed) as_bids_tabular(electrode_path) #> <BIDS Tabular>[bids_tabular] #> $meta: #> {} #>  #> $content: #>      name         x           y          z  size    type manufacturer #>     <int>     <num>       <num>      <num> <int>  <char>       <char> #>  1:     1 -38.23672  42.9909111  32.116130     4 surface       AdTech #>  2:     2 -44.21946  32.4059267  34.909389     4 surface       AdTech #>  3:     3 -45.31461  22.1149697  37.702649     4 surface       AdTech #>  4:     4 -48.16445  11.2359580  40.201882     4 surface       AdTech #>  5:     5 -54.12109   0.9450009  42.995141     4 surface       AdTech #> ---                                                                   #> 43:    43 -58.09218   5.5024247 -12.134986     4 surface       AdTech #> 44:    44 -62.06327  -5.0825597  -9.341726     4 surface       AdTech #> 45:    45 -65.52670 -15.6675440  -7.577562     4 surface       AdTech #> 46:    46 -65.38842 -27.2816241  -5.372357     4 surface       AdTech #> 47:    47 -63.00000 -38.6016769  -4.343261     4 surface       AdTech"},{"path":"http://dipterix.org/bidsr/articles/aaa-get-started.html","id":"bids-entity","dir":"Articles","previous_headings":"","what":"BIDS entity","title":"Get Started","text":"Object path_parsed file entity class, entities parsed supported schema, BIDS entity rules file can queried via","code":"class(path_parsed) #> [1] \"bidsr::bids_entity_file_ieeg_electrodes\" #> [2] \"bidsr::bids_entity_file\"                 #> [3] \"bidsr::bids_class_base\"                  #> [4] \"S7_object\"  path_parsed$get_entity(\"space\") #> [1] \"ACPC\"  path_parsed$entities #> $sub #> sub-bp #>  #> $ses #> ses-01 #>  #> $acq #>  #>  #> $space #> space-ACPC path_parsed$get_entity_rules() #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"prohibited\" \"label\"      #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"prohibited\" \"index\"      #>  #> $space #> [1] \"optional\" \"label\"    #>  #> $recording #> [1] \"prohibited\" \"label\""},{"path":"http://dipterix.org/bidsr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhengjia Wang. Author, maintainer.","code":""},{"path":"http://dipterix.org/bidsr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang Z (2025). bidsr: Brain Imaging Data Structure ('BIDS') Parser R. R package version 0.0.1, https://dipterix.org/bidsr/.","code":"@Manual{,   title = {bidsr: A Brain Imaging Data Structure ('BIDS') Parser in R},   author = {Zhengjia Wang},   year = {2025},   note = {R package version 0.0.1},   url = {https://dipterix.org/bidsr/}, }"},{"path":"http://dipterix.org/bidsr/index.html","id":"bidsr","dir":"","previous_headings":"","what":"A Brain Imaging Data Structure (BIDS) Parser in R","title":"A Brain Imaging Data Structure (BIDS) Parser in R","text":"Brain Imaging Data Structure (BIDS) standard organizing neuroimaging behavioral data (see https://bids.neuroimaging.io/index.html). Package bidsr aims providing comprehensive tools query manipulate ‘BIDS’ data files. package experimental, please see Road-map .","code":""},{"path":"http://dipterix.org/bidsr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Brain Imaging Data Structure (BIDS) Parser in R","text":"can install development version bidsr like :","code":"# install.packages(\"pak\") pak::pak(\"dipterix/bidsr\")"},{"path":"http://dipterix.org/bidsr/index.html","id":"road-map","dir":"","previous_headings":"","what":"Road-map","title":"A Brain Imaging Data Structure (BIDS) Parser in R","text":"Current milestone: R S7 base classes properties tabular data JSON side-car BIDS entity dataset_description.json README CITATION.cff, CHANGES, LICENSE participants.tsv, participants.json samples.tsv, samples.json phenotype/ Scans file Sessions file Query files data type subject Use BIDS schema generate file entity rules dynamically Get top-level files Analyze list subject data types Find side-car meta-data information using BIDS inheritance principle tentative -list: Provide read functions handle common file formats Provide handler registry access process data files Modify path Use BIDS schema validation rules dynamically Validate BIDS files","code":""},{"path":"http://dipterix.org/bidsr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Brain Imaging Data Structure (BIDS) Parser in R","text":"example demonstrates high-level tools query ‘BIDS’ project. code requires executing built-command download ‘BIDS’ example data-sets. Please copy-paste-run following R commands: Let’s inspect project ieeg_motorMiller2007 official BIDS example repository:","code":"library(bidsr) example_root <- download_bids_examples() ## Path to `ieeg_motorMiller2007` project_path <- file.path(example_root, \"ieeg_motorMiller2007\")   ## BIDS project instance project <- bids_project(path = project_path)   ## The top-level `dataset_description.json` and `participants.tsv`  ## can be parsed via description <- project$get_dataset_description() participants <- project$get_participants()   ## To obtain the values, use `$` operator (same as `.` in `Python`): description$BIDSVersion   ## Given a project path or instance, a `BIDS` subject can be instantiated via  ## the following two ways.   # Method 1 subject <- bids_subject(project = project, subject_code = \"sub-bp\")  # Method 2 subject <- bids_subject(project = project_path, subject_code = \"bp\")  ## The official `BIDS` and its extensions support various of data types,  ## such as `anat`, `func`, `meg`, `eeg`, `ieeg`, etc.  ## use `query_modality` method to query the files ieeg_table <- subject$query_modality(\"ieeg\") ieeg_table #>           parsed data_type      suffix extension    sub    ses    acq #>           <AsIs>    <char>      <char>    <char> <char> <char> <lgcl> #>  1: sub-bp/s....      ieeg coordsystem      json     bp     01     NA #>  2: sub-bp/s....      ieeg  electrodes       tsv     bp     01     NA #>  3: sub-bp/s....      ieeg coordsystem      json     bp     01     NA  #>  4: sub-bp/s....      ieeg  electrodes       tsv     bp     01     NA  #>  5: sub-bp/s....      ieeg    channels       tsv     bp     01     NA      #>  6: sub-bp/s....      ieeg      events       tsv     bp     01     NA     #>  7: sub-bp/s....      ieeg        ieeg       eeg     bp     01     NA     #>  8: sub-bp/s....      ieeg        ieeg      json     bp     01     NA     #>  9: sub-bp/s....      ieeg        ieeg      vhdr     bp     01     NA     #> 10: sub-bp/s....      ieeg        ieeg      vmrk     bp     01     NA     #>         space   task    run #>        <char> <char> <char> #>  1:      ACPC   <NA>   <NA> #>  2:      ACPC   <NA>   <NA> #>  3: Talairach   <NA>   <NA> #>  4: Talairach   <NA>   <NA> #>  5:      <NA>  motor      1 #>  6:      <NA>  motor      1 #>  7:      <NA>  motor      1 #>  8:      <NA>  motor      1 #>  9:      <NA>  motor      1 #> 10:      <NA>  motor      1   ## The first column contains a list of file instances. Here's an  ## example to read the `ACPC` electrode coordinates:  subset_result <- subset(ieeg_table, space == \"ACPC\" & suffix == \"electrodes\") path_parsed <- subset_result$parsed[[1]] print(path_parsed)  electrode_path <- file.path(project, path_parsed) as_bids_tabular(electrode_path) #> <BIDS Tabular>[bids_tabular] #> $meta: #> {} #>  #> $content: #>      name         x           y          z  size    type manufacturer #>     <int>     <num>       <num>      <num> <int>  <char>       <char> #>  1:     1 -38.23672  42.9909111  32.116130     4 surface       AdTech #>  2:     2 -44.21946  32.4059267  34.909389     4 surface       AdTech #>  3:     3 -45.31461  22.1149697  37.702649     4 surface       AdTech #>  4:     4 -48.16445  11.2359580  40.201882     4 surface       AdTech #>  5:     5 -54.12109   0.9450009  42.995141     4 surface       AdTech #> ---                                                                   #> 43:    43 -58.09218   5.5024247 -12.134986     4 surface       AdTech #> 44:    44 -62.06327  -5.0825597  -9.341726     4 surface       AdTech #> 45:    45 -65.52670 -15.6675440  -7.577562     4 surface       AdTech #> 46:    46 -65.38842 -27.2816241  -5.372357     4 surface       AdTech #> 47:    47 -63.00000 -38.6016769  -4.343261     4 surface       AdTech   ## `BIDS` entity  ## Object `path_parsed` is a file entity class, with the entities parsed  class(path_parsed) #> [1] \"bidsr::bids_entity_file_ieeg_electrodes\" #> [2] \"bidsr::bids_entity_file\"                 #> [3] \"bidsr::bids_class_base\"                  #> [4] \"S7_object\"  path_parsed$get_entity(\"space\") #> [1] \"ACPC\"  ## List all available entities  path_parsed$entities #> $sub #> sub-bp #>  #> $ses #> ses-01 #>  #> $acq #>  #>  #> $space #> space-ACPC   ## If supported by schema, the `BIDS` entity rules for the  ## file can be queried via  path_parsed$get_entity_rules() #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"prohibited\" \"label\"      #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"prohibited\" \"index\"      #>  #> $space #> [1] \"optional\" \"label\"    #>  #> $recording #> [1] \"prohibited\" \"label\""},{"path":"http://dipterix.org/bidsr/reference/bids_class_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Base abstract class — bids_class_base","title":"Base abstract class — bids_class_base","text":"bidsr classes inherit abstract class, provides consistent S3 generics. abstract class, called directly; use new_bids_class create new class definitions.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_class_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base abstract class — bids_class_base","text":"","code":"bids_class_base()"},{"path":"http://dipterix.org/bidsr/reference/bids_dataset_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definition of 'BIDS' data-set description — bids_dataset_description","title":"Class definition of 'BIDS' data-set description — bids_dataset_description","text":"See https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#dataset_descriptionjson specification.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_dataset_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition of 'BIDS' data-set description — bids_dataset_description","text":"","code":"bids_dataset_description(   Name = character(0),   BIDSVersion = character(0),   DatasetLinks = list(),   HEDVersion = character(0),   DatasetType = character(0),   License = character(0),   Authors = character(0),   GeneratedBy = list(),   SourceDatasets = list(),   Acknowledgements = character(0),   HowToAcknowledge = character(0),   Funding = character(0),   EthicsApprovals = character(0),   ReferencesAndLinks = character(0),   DatasetDOI = character(0),   parent_directory = character(0) )  as_bids_dataset_description(x, parent_directory, ...)"},{"path":"http://dipterix.org/bidsr/reference/bids_dataset_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition of 'BIDS' data-set description — bids_dataset_description","text":"Name (required, string) Name data-set. BIDSVersion (required, string) version BIDS standard used. DatasetLinks (required 'BIDS-URI' used) Used map given data-set name 'BIDS-URI' form bids:<dataset-name>:path/within/dataset local remote location. HEDVersion (recommended strings) version 'HED' schema used validate 'HED' tags study. May include single schema base schema one library schema. DatasetType (recommended string) Must one \"raw\" \"derivative\"; package bidsr automatically assigns \"raw\" given. License (recommended string) license data-set Authors (recommended strings) Vector individuals contributed creation/curation data-set GeneratedBy (recommended) converted bids_dataset_generated_by SourceDatasets Used specify locations relevant attributes source data-sets. Valid keys object include \"URL\", \"DOI\", \"Version\" string values; Package bidsr check names Acknowledgements (optional string) Text acknowledging contributions individuals institutions beyond listed Authors Funding. HowToAcknowledge (optional string) Text containing instructions researchers using dataset acknowledge original authors. field can also used define publication cited publications use dataset. Funding (optional strings) List sources funding (grant numbers). EthicsApprovals (optional strings) List ethics committee approvals research protocols /protocol identifiers. ReferencesAndLinks (optional strings) List references publications contain information data-set. reference may textual URI. DatasetDOI (optional string) Digital Object Identifier data-set (corresponding paper). 'DOIs' expressed valid 'URI' parent_directory parent directory file 'dataset_description.json' stored. input ignored x path 'dataset_description.json', otherwise must. x R object interpreted 'BIDS' data description; default support list, path 'json' file, 'json' string, etc. ... passed methods","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_dataset_description.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class definition of 'BIDS' data-set description — bids_dataset_description","text":"","code":"# ---- Manually enter entries ---------------------------------------- dataset_description <- bids_dataset_description(   # a parent directory is mandatory as it defines what data   # dataset_description.json applies to    parent_directory = \"/path/to/BIDS/folder\",    Name = \"A dummy experiments\",   BIDSVersion = \"1.6.0\",   License = \"CC0\",   Authors = c(\"Zhengjia Wang\"),   Acknowledgements = c(     \"Package `bidsr` is a 3rd-party BIDS reader developed by\",     \"a RAVE (https://rave.wiki) team member with procrastination.\"   ),   HowToAcknowledge = c(     \"Please cite this paper:\",     \"https://doi.org/10.1016/j.neuroimage.2020.117341\"   ),   Funding = c(     \"NIH R01MH133717\",     \"NIH U01NS113339\",     \"NIH 1R24MH117529\"   ),   ReferencesAndLinks = c(     \"https://rave.wiki\"   ),   DatasetDOI = \"https://doi.org/10.1016/j.neuroimage.2020.117341\",   HEDVersion = \"8.0.0\",   GeneratedBy = list(     list(       Name = \"Dipterix\",       Version = \"0.0.1\",       Container = list(         Type = \"r-package\",         Tag = \"dipterix/bidsr:0.0.1\"       )     )   ) )   # ---- Read from file ---------------------------------------------  # Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE) if(!isFALSE(examples)) {   example_descr <- file.path(     examples, \"ieeg_epilepsy_ecog\", \"dataset_description.json\")    x <- as_bids_dataset_description(example_descr)   x    # ---- Formatting --------------------------------------------------   # convert to R list (use recursive to expand field `GeneratedBy`)   as.list(x, recursive = TRUE)    # JSON string   format(x) }"},{"path":"http://dipterix.org/bidsr/reference/bids_dataset_generated_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definition for 'BIDS' meta-data 'GeneratedBy' — bids_dataset_generated_by","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — bids_dataset_generated_by","text":"See definition https://bids-specification.readthedocs.io/en/stable/glossary.html#objects.metadata.GeneratedBy","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_dataset_generated_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — bids_dataset_generated_by","text":"","code":"bids_dataset_generated_by(   Name = character(0),   Version = character(0),   Description = character(0),   CodeURL = character(0),   Container = list() )"},{"path":"http://dipterix.org/bidsr/reference/bids_dataset_generated_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — bids_dataset_generated_by","text":"Name (character, required) name pipeline process generated outputs. Version (character, optional) version pipeline Description (character, optional) plain-text description pipeline process generated outputs. CodeURL (character, optional) 'URL' code used generate data may found. Container (character, optional) Used specify location relevant attributes software container image used produce data. Valid keys object include type, tag 'URL' string values. Package 'bidsr' check inside entry.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_dataset_generated_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — bids_dataset_generated_by","text":"Instantiated object class bids_dataset_generated_by","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_dataset_generated_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class definition for 'BIDS' meta-data 'GeneratedBy' — bids_dataset_generated_by","text":"","code":"x <- bids_dataset_generated_by(   Name = \"RAVE Team\",   Version = \"0.0.1\",   Container = list(     Type = \"docker\",     Tag = \"rave-ieeg/rave-pipelines:0.0.1\"   ) )  x #> { #>   \"Name\": \"RAVE Team\", #>   \"Version\": \"0.0.1\", #>   \"Container\": { #>     \"Type\": \"docker\", #>     \"Tag\": \"rave-ieeg/rave-pipelines:0.0.1\" #>   } #> }  x$Version <- \"0.0.2\"  # convert to basic list as.list(x) #> $Name #> [1] \"RAVE Team\" #>  #> $Version #> [1] \"0.0.2\" #>  #> $Container #> $Container$Type #> [1] \"docker\" #>  #> $Container$Tag #> [1] \"rave-ieeg/rave-pipelines:0.0.1\" #>  #>   # get JSON string format(x) #> [1] \"{\\n  \\\"Name\\\": \\\"RAVE Team\\\",\\n  \\\"Version\\\": \\\"0.0.2\\\",\\n  \\\"Container\\\": {\\n    \\\"Type\\\": \\\"docker\\\",\\n    \\\"Tag\\\": \\\"rave-ieeg/rave-pipelines:0.0.1\\\"\\n  }\\n}\""},{"path":"http://dipterix.org/bidsr/reference/bids_entity.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definitions of 'BIDS' entity — bids_entity","title":"Class definitions of 'BIDS' entity — bids_entity","text":"'BIDS' entity attribute can associated file, contributing identification file component file-name form hyphen-separated key-value pair. specification can found https://bids-specification.readthedocs.io/en/stable/common-principles.html#entities.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_entity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definitions of 'BIDS' entity — bids_entity","text":"","code":"bids_entity_label_required(   key = character(0),   value = character(0),   index_format = \"%d\" )  bids_entity_label_optional(   key = character(0),   value = character(0),   index_format = \"%d\" )  bids_entity_label_prohibited(   key = character(0),   value = character(0),   index_format = \"%d\" )  bids_entity_index_required(   key = character(0),   value = integer(0),   index_format = \"%d\" )  bids_entity_index_optional(   key = character(0),   value = integer(0),   index_format = \"%d\" )  bids_entity_index_prohibited(   key = character(0),   value = integer(0),   index_format = \"%d\" )  bids_entity_any_required(   key = character(0),   value = character(0),   index_format = \"%d\" )  bids_entity_any_optional(   key = character(0),   value = character(0),   index_format = \"%d\" )  bids_entity_any_prohibited(   key = character(0),   value = character(0),   index_format = \"%d\" )"},{"path":"http://dipterix.org/bidsr/reference/bids_entity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definitions of 'BIDS' entity — bids_entity","text":"key (string, required) short string, typically compression entity name, uniquely identifies entity part file-name. value string (label) non-negative integer (index); requisite form value gets specified alongside key whenever entity appears file-name. entity, value one two possible types: index_format index entities, format index values (e.g. padding zeros) formatted string; default without padding Index: non-negative integer, potentially zero-padded consistent width. Label: alphanumeric string. Note labels must collide casing ignored (bidsr validate ).","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_entity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class definitions of 'BIDS' entity — bids_entity","text":"'BIDS' entity object.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_entity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class definitions of 'BIDS' entity — bids_entity","text":"","code":"entity_int <- bids_entity_index_optional(key = \"run\", value = \"001\") entity_int$value <- integer()  print(entity_int) # nothing will be printed out #>   # subject entity entity_subject <- bids_entity_any_required(key = \"sub\", value = \"HUP225\")  print(entity_subject) #> sub-HUP225  # index entity_subject$value <- 1  print(entity_subject) #> sub-1  # format index entity_subject$index_format <- \"%03d\" print(entity_subject) #> sub-001  if (FALSE) { # \\dontrun{    # trying to set invalid values will result in errors   bids_entity_index_required(key = \"run\")    entity_int <- bids_entity_index_required(key = \"run\", value = \"001\")    # trying to unset require entity   entity_int$value <- integer()    # trying to set invalid entity   entity_int$value <- \"asdad\"    # trying to set prohibited entiry   bids_entity_index_prohibited(\"invalid\", 123)  } # }"},{"path":"http://dipterix.org/bidsr/reference/bids_entity_file_registry.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate 'BIDS' entity file-name class — bids_entity_file_registry","title":"Generate 'BIDS' entity file-name class — bids_entity_file_registry","text":"Rule-based 'BIDS' entity file names, see class generator new_bids_entity_file_class; entity tables; see https://bids-specification.readthedocs.io/en/stable/appendices/entity-table.html","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_entity_file_registry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate 'BIDS' entity file-name class — bids_entity_file_registry","text":"","code":"parse_bids_file_entity_registry(   definition_table,   entity_table,   data_type_table = NULL,   suffix_table = NULL )  register_bids_file_entiries(   definition_table,   entity_table,   data_type_table = NULL,   suffix_table = NULL,   overwrite = NA )  bids_entity_file_registry_get(identifier, ifnotfound = NULL, overwrite = NA)  bids_entity_file_registry_list(data_types = NA)"},{"path":"http://dipterix.org/bidsr/reference/bids_entity_file_registry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate 'BIDS' entity file-name class — bids_entity_file_registry","text":"definition_table data table path 'CSV' file 'BIDS' entities defined combination data type suffix. columns must start 'DataType' 'Suffix', followed data entities; See 'Examples'. entity_table table two columns: 'Name' (entity keys) 'Type') entity data type; See 'Examples'. data_type_table, suffix_table used generate descriptions; optional overwrite whether overwrite existing registry two definitions identifier coincide; default NA, assuming two definitions identical, overwrite existing ones; set TRUE always force registering new definitions; set FALSE script error existing definitions already registered. identifier file registry identifier, automatically derived data type suffix; format 'datatype/suffix' ifnotfound default return definition found data_types constraint returns certain data types; default NA (return entire registry)","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_entity_file_registry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate 'BIDS' entity file-name class — bids_entity_file_registry","text":"parse_bids_file_entity_registry, returns list entity identifiers definitions; register_bids_file_entiries registers definitions registry, identifiers, returns number total definitions registered.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_entity_file_registry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate 'BIDS' entity file-name class — bids_entity_file_registry","text":"","code":"# ---- Example tables --------------------------------------------  definition_table <- system.file(   \"definitions\", \"MagneticResonanceImaging.csv\",   package = \"bidsr\")  print(head(read.csv(definition_table))) #>   DataType    Suffix      sub      ses     task      acq       ce        rec #> 1     anat       T1w required optional optional optional optional prohibited #> 2     anat       T2w required optional optional optional optional prohibited #> 3     anat       PDw required optional optional optional optional prohibited #> 4     anat     starw required optional optional optional optional prohibited #> 5     anat     FLAIR required optional optional optional optional prohibited #> 6     anat inplaneT1 required optional optional optional optional prohibited #>        dir        run      mod       echo       flip        inv         mt #> 1 optional prohibited optional prohibited prohibited prohibited prohibited #> 2 optional prohibited optional prohibited prohibited prohibited prohibited #> 3 optional prohibited optional prohibited prohibited prohibited prohibited #> 4 optional prohibited optional prohibited prohibited prohibited prohibited #> 5 optional prohibited optional prohibited prohibited prohibited prohibited #> 6 optional prohibited optional prohibited prohibited prohibited prohibited #>       part  recording    chunk #> 1 optional prohibited optional #> 2 optional prohibited optional #> 3 optional prohibited optional #> 4 optional prohibited optional #> 5 optional prohibited optional #> 6 optional prohibited optional   entity_table <- system.file(   \"definitions\", \"MagneticResonanceImagingEntity.csv\",   package = \"bidsr\")  print(head(read.csv(entity_table))) #>   Name  Type #> 1  sub label #> 2  ses label #> 3 task label #> 4  acq label #> 5   ce label #> 6  rec label   data_type_table <- system.file(   \"definitions\", \"glossary\", \"DataType.csv\", package = \"bidsr\")  print(head(read.csv(data_type_table))) #>   Name                              FullName #> 1 anat Anatomical Magnetic Resonance Imaging #> 2  eeg                Electroencephalography #> 3 ieeg   Intracranial electroencephalography #>                                                                                   Description #> 1 Magnetic resonance imaging sequences designed to characterize static, anatomical features.  #> 2                                                                      Electroencephalography #> 3              Intracranial electroencephalography (iEEG) or electrocorticography (ECoG) data   suffix_table <- system.file(   \"definitions\", \"glossary\", \"Suffix.csv\", package = \"bidsr\")  print(head(read.csv(suffix_table))) #>        Name       Description #> 1       T1w T1-weighted image #> 2       T2w T2-weighted image #> 3       PDw                   #> 4     starw                   #> 5     FLAIR                   #> 6 inplaneT1                    # ---- Parse ------------------------------------------------ parsed <- parse_bids_file_entity_registry(   definition_table = definition_table,   entity_table = entity_table,   data_type_table = data_type_table,   suffix_table = suffix_table )  parsed[[1]] #> $identifier #> [1] \"anat/t1w\" #>  #> $definition #> <bidsr::bids_entity_file_anat_t1w> class #> @ parent     : <bidsr::bids_entity_file> #> @ constructor: function(parent_directory, sub, ses, task, acq, ce, dir, mod, part, chunk, ..., .list, .suffix, .extension) {...} #> @ validator  : <NULL> #> @ properties : #>  $ parent_directory: <character> #>  $ data_type       : <character> #>  $ suffix          : <character> #>  $ entities        : <list>      #>  $ extension       : <character> #>  $ description     : <character> #>  $ identifier      : <character> #>   # ---- Register to registry for querying -------------------- register_bids_file_entiries(   definition_table = definition_table,   entity_table = entity_table,   data_type_table = data_type_table,   suffix_table = suffix_table )  # example using definition t1_definition <- bids_entity_file_registry_get(\"anat/t1w\")  filename <- t1_definition(   parent_directory = \"anat\",   sub = \"001\",   ses = \"001\",   task = \"001\",   acq = \"ecog\",   .extension = \"nii.gz\" )  # use formatting format(filename) #> [1] \"anat/sub-001_ses-001_task-001_acq-ecog_T1w.nii.gz\"  file.path(\"BIDS/directory/to\", filename) #> [1] \"BIDS/directory/to/anat/sub-001_ses-001_task-001_acq-ecog_T1w.nii.gz\"  # with descriptions filename$print(details = TRUE) #> [anat/t1w] anat/sub-001_ses-001_task-001_acq-ecog_T1w.nii.gz #> \t▶ T1-weighted image, Anatomical Magnetic Resonance Imaging  # get subject value filename$entities$sub$value #> [1] \"001\""},{"path":"http://dipterix.org/bidsr/reference/bids_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-level nested map to store key-value data with inherited structure — bids_map","title":"Low-level nested map to store key-value data with inherited structure — bids_map","text":"Low-level nested map store key-value data inherited structure","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-level nested map to store key-value data with inherited structure — bids_map","text":"","code":"bids_map(parent = NULL, search_depth = BIDS_MAP_MAX_DEPTH())"},{"path":"http://dipterix.org/bidsr/reference/bids_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-level nested map to store key-value data with inherited structure — bids_map","text":"parent NULL map top level, another map inherit search_depth integer maximum search depths; default 29; set options 'bidsr.map.search_depth' environment variable 'BIDS_MAP_MAX_DEPTH' change default depth","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-level nested map to store key-value data with inherited structure — bids_map","text":"'bids_map' object.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low-level nested map to store key-value data with inherited structure — bids_map","text":"","code":"root_map <- bids_map() root_map$key1 <- 1 root_map$key2 <- 2 names(root_map) #> [1] \"key2\" \"key1\"  child_map <- bids_map(parent = root_map) child_map$key3 <- 3 names(child_map) #> [1] \"key1\" \"key2\" \"key3\" child_map$key1 #> [1] 1 child_map$key2 #> [1] 2  # mask key2 child_map$key2 <- \"a\" child_map #> <bidsr::map 04b47cdf-6871-4cd0-a70a-999a701f22aa> #>   (parent: b544b2a0-b497-4ed8-8397-adb21f6995b0) #> [key2, key3] #>   (Inherited) [key1]  root_map$key2 #> [1] 2 child_map$key2 #> [1] \"a\"  # nested maps grand_child <- bids_map(parent = child_map)  # value comes from child map grand_child$key2 #> [1] \"a\"  # remove key2 from child map child_map@impl$remove(\"key2\")  # key2 is from root map now grand_child$key2 #> [1] 2"},{"path":"http://dipterix.org/bidsr/reference/bids_project.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' project class — bids_project","title":"'BIDS' project class — bids_project","text":"'BIDS' project class","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' project class — bids_project","text":"","code":"bids_project(   path,   raw_data_relpath = \".\",   source_data_relpath = \"sourcedata\",   derivative_data_relpath = \"derivatives\",   strict = TRUE )"},{"path":"http://dipterix.org/bidsr/reference/bids_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' project class — bids_project","text":"path absolute path 'BIDS' project directory; raw_data_relpath raw data-set path, relative (path); source_data_relpath source data-set path, relative (path); derivative_data_relpath derivative data-set path, relative (path); strict whether path needs exist; default TRUE","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' project class — bids_project","text":"'BIDS' project instance.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' project class — bids_project","text":"","code":"# Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE) if(!isFALSE(examples)) {    project_path <- file.path(examples, \"ieeg_epilepsy_ecog\")    project <- bids_project(     path = project_path,     raw_data_relpath = \".\",     derivative_data_relpath = \"derivatives\"   )    project  }"},{"path":"http://dipterix.org/bidsr/reference/bids_property.html","id":null,"dir":"Reference","previous_headings":"","what":"'S7' property for 'BIDS' classes — bids_property","title":"'S7' property for 'BIDS' classes — bids_property","text":"Used property generate properties constraints class generators new_bids_class.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'S7' property for 'BIDS' classes — bids_property","text":"","code":"bids_property(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   final = FALSE,   ... )  bids_property_optional(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   max_len = 1L,   ... )  bids_property_required(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   len = 1L,   ... )  bids_property_prohibited(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ... )  bids_property_recommended(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   max_len = 1L )  bids_property_deprecated(   name,   class = S7::class_any,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   max_len = 1L )  bids_property_character(   name,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_character )  bids_property_collapsed_character(   name,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   collapse = \" \",   ...,   class = S7::class_character )  bids_property_choice(   name,   choices,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   ...,   class = S7::class_character )  bids_property_numeric(   name,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_numeric )  bids_property_integerish(   name,   type = c(\"optional\", \"recommended\", \"required\", \"deprecated\", \"prohibited\"),   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_numeric )  bids_property_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_list )  bids_property_named_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = list(),   ...,   class = S7::class_list )  bids_property_unnamed_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = NULL,   ...,   class = S7::class_list )  bids_property_format(getter)  bids_property_print_format  bids_property_entity_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = list(),   rules = blank_named_list(),   ...,   class = S7::class_list )  bids_property_tabular_column_descriptor_list(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = list(),   ...,   class = S7::class_list )  bids_property_data_frame(   name,   getter = NULL,   setter = NULL,   validator = NULL,   default = data.frame(),   ...,   class = S7::class_data.frame )  bids_property_tabular_content(   name = \"content\",   setter = NULL,   ...,   name_meta = \"meta\",   lower_case_column_names = FALSE )  bids_property_tabular_meta(   name = \"meta\",   setter = NULL,   preset = NULL,   ...,   name_content = \"content\" )"},{"path":"http://dipterix.org/bidsr/reference/bids_property.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"'S7' property for 'BIDS' classes — bids_property","text":"object class S7_property length 6.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'S7' property for 'BIDS' classes — bids_property","text":"name required, string, name property class 'S7' class getter, setter, validator, default see new_property final whether property final initialized; default false; properties altered ... passed methods max_len type='optional', maximum vector length property; default 1 len type='required', vector length property; default 1 type type property, can 'required', 'optional', 'prohibited' collapse collapsed property, passed paste choices properties can chosen given choices; character strings candidate choices. rules 'BIDS' entities, named list, keys entity keys, values vector length 0 2, indicating type ('required', 'optional', 'prohibited') data format ('index', 'label'); see bids_entity_file_registry usages. name_meta tabular content, name meta property; default \"meta\" lower_case_column_names tabular content, whether convert column names lower case; default FALSE preset list preset meta data; default NULL name_content tabular meta, name content property; default \"content\"","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_property.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'S7' property for 'BIDS' classes — bids_property","text":"functions call new_property internally.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_property.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'S7' property for 'BIDS' classes — bids_property","text":"","code":"cls <- new_bids_class(   name = \"my_class\",   properties = list(     str = bids_property_character(       name = \"str\",       type = \"required\",       validator = function(value) {         if (length(value) == 1 &&             !isTRUE(is.na(value)) && nzchar(value)) {           return()         }         return(sprintf(\"Invalid `str`: %s\", paste(sQuote(value), collapse = \", \")))       }     )   ),   methods = list(     # read-only methods     format = function(self, ...) {       sprintf(\"my_class@str -> %s\", self$str)     }   ) )  instance <- cls(str = \"aha\") instance #> my_class@str -> aha  instance$str <- \"111\" instance #> my_class@str -> 111  if (FALSE) { # \\dontrun{    # what if you enter illegal values    cls(str = \"\")    cls(str = NA_character_)    cls(str = 1)   } # }"},{"path":"http://dipterix.org/bidsr/reference/bids_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' subject class — bids_subject","title":"'BIDS' subject class — bids_subject","text":"'BIDS' subject class","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' subject class — bids_subject","text":"","code":"bids_subject(project, subject_code, ..., strict = \"raw\")"},{"path":"http://dipterix.org/bidsr/reference/bids_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' subject class — bids_subject","text":"project 'BIDS' project instance, see bids_project, path 'BIDS' project subject_code character, subject code without leading 'sub-'. subject code, trimming leading entity key, contain additional dash ('-') ... passed constructor bids_project, project character string strict whether check subject folders exist, can logical characters; strict character strings, choices can 'raw' (checking raw-data directory) /'source' ( source-data directory); strict=TRUE equivalent checking ; default 'raw'. checks derivatives.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' subject class — bids_subject","text":"'BIDS' subject instance.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_subject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' subject class — bids_subject","text":"","code":"# Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE) if(!isFALSE(examples)) {    project_path <- file.path(examples, \"ieeg_epilepsy_ecog\")    project <- bids_project(     path = project_path,     raw_data_relpath = \".\",     derivative_data_relpath = \"derivatives\"   )     subject <- bids_subject(project = project, subject_code = \"ecog01\",                           strict = FALSE)    storage_root <- subject$get_path(\"raw\")    subject$query_modality(\"ieeg\")  }"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular.html","id":null,"dir":"Reference","previous_headings":"","what":"Class definitions and utilities for 'BIDS' tabular — bids_tabular","title":"Class definitions and utilities for 'BIDS' tabular — bids_tabular","text":"Official specification link: https://bids-specification.readthedocs.io/en/stable/common-principles.html#tabular-files","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class definitions and utilities for 'BIDS' tabular — bids_tabular","text":"","code":"bids_tabular_column_descriptor(..., .list = list())  bids_tabular_meta_sidecar(columns = list())  bids_tabular(content, meta = NULL)  as_bids_tabular(x, ...)  new_bids_tabular_class(   table_name,   parent = bids_tabular,   content_setter = NULL,   meta_preset = NULL,   prepare_save = NULL,   lower_case_column_names = FALSE )"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class definitions and utilities for 'BIDS' tabular — bids_tabular","text":"..., .list bids_tabular_column_descriptor, list key-value properties; as_bids_tabular, passed bids_tabular_meta_sidecar columns named list, key correspond table column name, item named list descriptors, bids_tabular_column_descriptor instance content data frame table column names non-blanks possibly snake-cases (see specification); bidsr check column names compatibility concerns. However users respect specification use recommended conventions meta instance bids_tabular_meta_sidecar, class containing list descriptors column (see argument columns) x R object can converted (e.g. list, table), path tabular file. table_name name table, used generate new class; class name bids_tabular_<table_name> parent parent class new class; default bids_tabular content_setter setter function set content; see bids_property meta_preset preset function set meta; see bids_tabular_meta_sidecar prepare_save function prepare content saving; take bids_tabular object first argument, return content saved lower_case_column_names TRUE, column names converted lower case; default TRUE","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class definitions and utilities for 'BIDS' tabular — bids_tabular","text":"component bids_tabular.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class definitions and utilities for 'BIDS' tabular — bids_tabular","text":"","code":"# convert a data table into BIDS tabular table <- data.frame(   a = c(1, 2, 3, NA, NA, 6, 7, 8, 9, 10),   b = sample(c('a', 'b'), size = 10, replace = TRUE) )  # basic as_bids_tabular(table) #> <BIDS Tabular>[bids_tabular] #> $meta: #> {} #>  #> $content: #>         a      b #>     <num> <char> #>  1:     1      a #>  2:     2      a #>  3:     3      b #>  4:    NA      a #>  5:    NA      a #>  6:     6      b #>  7:     7      a #>  8:     8      a #>  9:     9      a #> 10:    10      b  # add descriptors tabular <- as_bids_tabular(   table,   a = list(LongName = \"An integer\"),   b = list(\"Levels\" = list('a' = \"Abnormal\", 'b' = \"Bipolar\")) ) tabular #> <BIDS Tabular>[bids_tabular] #> $meta: #> { #>   \"a\": { #>     \"LongName\": \"An integer\" #>   }, #>   \"b\": { #>     \"Levels\": { #>       \"a\": \"Abnormal\", #>       \"b\": \"Bipolar\" #>     } #>   } #> } #>  #> $content: #>         a      b #>     <num> <char> #>  1:     1      a #>  2:     2      a #>  3:     3      b #>  4:    NA      a #>  5:    NA      a #>  6:     6      b #>  7:     7      a #>  8:     8      a #>  9:     9      a #> 10:    10      b   # query data is.data.frame(tabular$content) #> [1] TRUE tabular$content$a #>  [1]  1  2  3 NA NA  6  7  8  9 10  # query meta tabular$meta$columns$a #> { #>   \"LongName\": \"An integer\" #> }  # save to tsv tsv <- tempfile(fileext = \".tsv\") paths <- tabular$save(tsv) print(paths) #> $table_path #> /tmp/RtmplhxG4L/file1b8f106bafda.tsv #>  #> $sidecar_path #> /tmp/RtmplhxG4L/file1b8f106bafda.json #>   # use base R to read read.table(tsv, header = TRUE, na.strings = \"n/a\") #>     a b #> 1   1 a #> 2   2 a #> 3   3 b #> 4  NA a #> 5  NA a #> 6   6 b #> 7   7 a #> 8   8 a #> 9   9 a #> 10 10 b  # get sidecar cat(readLines(paths$sidecar_path), sep = \"\\n\") #> { #>   \"a\": { #>     \"LongName\": \"An integer\" #>   }, #>   \"b\": { #>     \"Levels\": { #>       \"a\": \"Abnormal\", #>       \"b\": \"Bipolar\" #>     } #>   } #> } #>   unlink(tsv) unlink(paths$sidecar_path)"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_participants.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' participant table class — bids_tabular_participants","title":"'BIDS' participant table class — bids_tabular_participants","text":"tabular containing list participants demographics. class child class bids_tabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#participants-file.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_participants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' participant table class — bids_tabular_participants","text":"","code":"bids_tabular_participants(content, meta = NULL)"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_participants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' participant table class — bids_tabular_participants","text":"content, meta see bids_tabular","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_participants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' participant table class — bids_tabular_participants","text":"bids_tabular_participants instance inheriting bids_tabular.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_participants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' participant table class — bids_tabular_participants","text":"","code":"# basic tabular <- bids_tabular_participants(   data.frame(     participant_id = \"sub-001\"   ) ) tabular #> <BIDS Tabular>[bids_tabular_participants] #> $meta: #> { #>   \"participant_id\": { #>     \"LongName\": \"Participant ID\", #>     \"Description\": \"A participant identifier of the form sub-<label>, matching a participant entity found in the dataset\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#participants-file\" #>   }, #>   \"species\": { #>     \"LongName\": \"Species\", #>     \"Description\": \"The species column SHOULD be a binomial species name from the NCBI Taxonomy (for example, homo sapiens, mus musculus, rattus norvegicus). For backwards compatibility, if species is absent, the participant is assumed to be homo sapiens.\", #>     \"TermURL\": \"https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi\" #>   }, #>   \"age\": { #>     \"LongName\": \"Subject age\", #>     \"Description\": \"Numeric value in years (float or integer value). It is recommended to tag participant ages that are 89 or higher as 89+, for privacy purposes\" #>   }, #>   \"sex\": { #>     \"LongName\": \"Sex\", #>     \"Description\": \"String value indicating phenotypical sex, one of \\\"male\\\", \\\"female\\\", \\\"other\\\"\", #>     \"Levels\": { #>       \"male\": \"male\", #>       \"female\": \"female\", #>       \"other\": \"other\" #>     } #>   }, #>   \"handedness\": { #>     \"LongName\": \"Subject handedness\", #>     \"Description\": \"String value indicating one of \\\"left\\\", \\\"right\\\", \\\"ambidextrous\\\"\", #>     \"Levels\": { #>       \"left\": \"left\", #>       \"right\": \"right\", #>       \"ambidextrous\": \"ambidextrous\" #>     }, #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/glossary.html#objects.columns.handedness\" #>   }, #>   \"strain\": { #>     \"LongName\": \"Strain\", #>     \"Description\": \"For species different from homo sapiens, string value indicating the strain of the species, for example: C57BL/6J\" #>   }, #>   \"strain_rrid\": { #>     \"LongName\": \"Strain RRID\", #>     \"Description\": \"For species different from homo sapiens, research resource identifier (RRID) of the strain of the species\", #>     \"TermURL\": \"https://rrid.site/data/source/nlx_154697-1/search\" #>   } #> } #>  #> $content: #>    participant_id      species #>            <char>       <char> #> 1:        sub-001 homo sapiens   # Run `download_bids_examples()` first examples <- download_bids_examples(test = TRUE) if(!isFALSE(examples)) {    file <- file.path(examples, \"ieeg_epilepsy_ecog\", \"participants.tsv\")    # read tabular as bids_tabular_participants   as_bids_tabular(file, cls = bids_tabular_participants)    # convert existing tabular   tabular <- bids_tabular(     data.frame(       participant_id = \"sub-001\"     )   )   tabular <- as_bids_tabular(tabular, cls = bids_tabular_participants)    # save to tsv   tsv <- file.path(tempdir(), \"participants.tsv\")   paths <- tabular$save(tsv)   print(paths)    # use base R to read   read.table(tsv, header = TRUE, na.strings = \"n/a\")    # get sidecar   cat(readLines(paths$sidecar_path), sep = \"\\n\")    unlink(tsv)   unlink(paths$sidecar_path) }"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_phenotype.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' phenotype and assessment table class — bids_tabular_phenotype","title":"'BIDS' phenotype and assessment table class — bids_tabular_phenotype","text":"tabular containing list phenotype & assessment, metadata. class child class bids_tabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#phenotypic--assessment-data.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_phenotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' phenotype and assessment table class — bids_tabular_phenotype","text":"","code":"bids_tabular_phenotype(content, meta = NULL)"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_phenotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' phenotype and assessment table class — bids_tabular_phenotype","text":"content, meta see bids_tabular","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_phenotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' phenotype and assessment table class — bids_tabular_phenotype","text":"bids_tabular_phenotype instance inheriting bids_tabular.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_phenotype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' phenotype and assessment table class — bids_tabular_phenotype","text":"","code":"bids_tabular_phenotype(   meta = list(     MeasurementToolMetadata = list(       Description = \"Adult ADHD Clinical Diagnostic Scale V1.2\",       TermURL = \"https://www.cognitiveatlas.org/task/id/trm_5586ff878155d\"     ),     adhd_b = list(       Description = \"B. CHILDHOOD ONSET OF ADHD (PRIOR TO AGE 7)\",       Levels = list(         \"1\" = \"YES\",         \"2\" = \"NO\"       )     ),     adhd_c_dx = list(       Description = \"As child met A, B, C, D, E and F diagnostic criteria\",       Levels = list(         \"1\" = \"YES\",         \"2\" = \"NO\"       )     )   ),   content = data.frame(     MeasurementToolMetadata = c(2, 3, 4),     adhd_b = c(1, 2, 1),     adhd_c_dx = c(2, 1, 2)   ) ) #> <BIDS Tabular>[bids_tabular_phenotype] #> $meta: #> { #>   \"MeasurementToolMetadata\": { #>     \"Description\": \"Adult ADHD Clinical Diagnostic Scale V1.2\", #>     \"TermURL\": \"https://www.cognitiveatlas.org/task/id/trm_5586ff878155d\" #>   }, #>   \"adhd_b\": { #>     \"Description\": \"B. CHILDHOOD ONSET OF ADHD (PRIOR TO AGE 7)\", #>     \"Levels\": { #>       \"1\": \"YES\", #>       \"2\": \"NO\" #>     } #>   }, #>   \"adhd_c_dx\": { #>     \"Description\": \"As child met A, B, C, D, E and F diagnostic criteria\", #>     \"Levels\": { #>       \"1\": \"YES\", #>       \"2\": \"NO\" #>     } #>   }, #>   \"Derivative\": { #>     \"LongName\": \"Derivative\", #>     \"Description\": \"[Optional, boolean] Indicates that values in the corresponding column are transformations of values from other columns (for example a summary score based on a subset of items in a questionnaire).\", #>     \"Levels\": { #>       \"true\": \"true\", #>       \"false\": \"false\" #>     } #>   } #> } #>  #> $content: #>    MeasurementToolMetadata adhd_b adhd_c_dx #>                      <num>  <num>     <num> #> 1:                       2      1         2 #> 2:                       3      2         1 #> 3:                       4      1         2"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' samples table class — bids_tabular_samples","title":"'BIDS' samples table class — bids_tabular_samples","text":"tabular containing list samples metadata. class child class bids_tabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#samples-file.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' samples table class — bids_tabular_samples","text":"","code":"bids_tabular_samples(content, meta = NULL)"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' samples table class — bids_tabular_samples","text":"content, meta see bids_tabular","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' samples table class — bids_tabular_samples","text":"bids_tabular_samples instance inheriting bids_tabular.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' samples table class — bids_tabular_samples","text":"","code":"# basic tabular <- bids_tabular_samples(   data.frame(     sample_id = \"sample-001\",     participant_id = \"sub-001\",     sample_type = \"cell line\"   ) ) tabular #> <BIDS Tabular>[bids_tabular_samples] #> $meta: #> { #>   \"sample_id\": { #>     \"LongName\": \"Sample ID\", #>     \"Description\": \"[Required, string] A sample identifier of the form `sample-<label>`, matching a sample entity found in the dataset\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#samples-file\" #>   }, #>   \"participant_id\": { #>     \"LongName\": \"Participant ID\", #>     \"Description\": \"[Required, string] A participant identifier of the form `sub-<label>`, matching a participant entity found in the dataset\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#participants-file\" #>   }, #>   \"sample_type\": { #>     \"LongName\": \"Sample Type\", #>     \"Description\": \"[Required, string] Biosample type defined by ENCODE Biosample Type\", #>     \"Levels\": { #>       \"cell line\": \"cell line\", #>       \"in vitro differentiated cells\": \"in vitro differentiated cells\", #>       \"primary cell\": \"primary cell\", #>       \"cell-free sample\": \"cell-free sample\", #>       \"cloning host\": \"cloning host\", #>       \"tissue\": \"tissue\", #>       \"whole organisms\": \"whole organisms\", #>       \"organoid\": \"organoid\", #>       \"technical sample\": \"technical sample\" #>     }, #>     \"TermURL\": \"https://www.encodeproject.org/profiles/biosample_type/\" #>   }, #>   \"pathology\": { #>     \"LongName\": \"Pathology\", #>     \"Description\": \"[Recommended, string] String value describing the pathology of the sample or type of control. When different from healthy, pathology SHOULD be specified. The pathology may be specified in either `samples.tsv` or `sessions.tsv`, depending on whether the pathology changes over time.\" #>   }, #>   \"derived_from\": { #>     \"LongName\": \"Derived From\", #>     \"Description\": \"[Recommended, string] `sample-<label>` entity from which a sample is derived, for example a slice of tissue (`sample-02`) derived from a block of tissue (`sample-01`).\" #>   } #> } #>  #> $content: #>     sample_id participant_id sample_type #>        <char>         <char>      <char> #> 1: sample-001        sub-001   cell line   # convert existing tabular tabular <- bids_tabular(   data.frame(     sample_id = \"sample-001\",     participant_id = \"sub-001\",     sample_type = \"cell line\"   ) ) tabular <- as_bids_tabular(tabular, cls = bids_tabular_samples)   # save to tsv tsv <- file.path(tempdir(), \"samples.tsv\") paths <- tabular$save(tsv) print(paths) #> $table_path #> /tmp/RtmplhxG4L/samples.tsv #>  #> $sidecar_path #> /tmp/RtmplhxG4L/samples.json #>   # use base R to read read.table(tsv, header = TRUE, na.strings = \"n/a\") #>    sample_id participant_id sample_type #> 1 sample-001        sub-001   cell line  # get sidecar cat(readLines(paths$sidecar_path), sep = \"\\n\") #> { #>   \"sample_id\": { #>     \"LongName\": \"Sample ID\", #>     \"Description\": \"[Required, string] A sample identifier of the form `sample-<label>`, matching a sample entity found in the dataset\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#samples-file\" #>   }, #>   \"participant_id\": { #>     \"LongName\": \"Participant ID\", #>     \"Description\": \"[Required, string] A participant identifier of the form `sub-<label>`, matching a participant entity found in the dataset\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#participants-file\" #>   }, #>   \"sample_type\": { #>     \"LongName\": \"Sample Type\", #>     \"Description\": \"[Required, string] Biosample type defined by ENCODE Biosample Type\", #>     \"Levels\": { #>       \"cell line\": \"cell line\", #>       \"in vitro differentiated cells\": \"in vitro differentiated cells\", #>       \"primary cell\": \"primary cell\", #>       \"cell-free sample\": \"cell-free sample\", #>       \"cloning host\": \"cloning host\", #>       \"tissue\": \"tissue\", #>       \"whole organisms\": \"whole organisms\", #>       \"organoid\": \"organoid\", #>       \"technical sample\": \"technical sample\" #>     }, #>     \"TermURL\": \"https://www.encodeproject.org/profiles/biosample_type/\" #>   } #> } #>   # clean up unlink(tsv) unlink(paths$sidecar_path)"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_scans.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' scans table class — bids_tabular_scans","title":"'BIDS' scans table class — bids_tabular_scans","text":"tabular containing list scans metadata. class child class bids_tabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#scans-file.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_scans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' scans table class — bids_tabular_scans","text":"","code":"bids_tabular_scans(content, meta = NULL)"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_scans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' scans table class — bids_tabular_scans","text":"content, meta see bids_tabular","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_scans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' scans table class — bids_tabular_scans","text":"bids_tabular_scans instance inheriting bids_tabular.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_scans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' scans table class — bids_tabular_scans","text":"","code":"# basic tabular <- bids_tabular_scans(   data.frame(     filename = c(       \"func/sub-control01_task-nback_bold.nii.gz\",       \"func/sub-control01_task-motor_bold.nii.gz\",       \"meg/sub-control01_task-rest_split-01_meg.nii.gz\"     ),     acq_time = c(       \"1877-06-15T13:45:30\",       \"1877-06-15T13:55:33\",       \"1877-06-15T12:15:27\"     )   ) )  # No ending Z, time is interpreted as local time # tabular uses UTC time tabular #> <BIDS Tabular>[bids_tabular_scans] #> $meta: #> { #>   \"filename\": { #>     \"LongName\": \"Filename\", #>     \"Description\": \"[Required, string] Relative paths to files. There MUST be exactly one row for each file. Values in filename MUST be unique. This column must appear first in the file.\" #>   }, #>   \"acq_time\": { #>     \"LongName\": \"Acquisition Time\", #>     \"Description\": \"[Optional, string] Acquisition time refers to when the first data point in each run was acquired. Furthermore, if this header is provided, the acquisition times of all files from the same recording MUST be identical. Datetime format and their deidentification are described in Units. This column may appear anywhere in the file.\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/common-principles.html#units\" #>   } #> } #>  #> $content: #>                                           filename                  acq_time #>                                             <char>                <nanotime> #> 1:       func/sub-control01_task-nback_bold.nii.gz 1877-06-15T13:45:30+00:00 #> 2:       func/sub-control01_task-motor_bold.nii.gz 1877-06-15T13:55:33+00:00 #> 3: meg/sub-control01_task-rest_split-01_meg.nii.gz 1877-06-15T12:15:27+00:00   # convert existing tabular tabular <- bids_tabular(   data.frame(     filename = \"func/sub-control01_task-nback_bold.nii.gz\",     acq_time = \"1877-06-15T13:45:30\"   ) ) tabular <- as_bids_tabular(tabular, cls = bids_tabular_scans) tabular #> <BIDS Tabular>[bids_tabular_scans] #> $meta: #> { #>   \"filename\": { #>     \"LongName\": \"Filename\", #>     \"Description\": \"[Required, string] Relative paths to files. There MUST be exactly one row for each file. Values in filename MUST be unique. This column must appear first in the file.\" #>   }, #>   \"acq_time\": { #>     \"LongName\": \"Acquisition Time\", #>     \"Description\": \"[Optional, string] Acquisition time refers to when the first data point in each run was acquired. Furthermore, if this header is provided, the acquisition times of all files from the same recording MUST be identical. Datetime format and their deidentification are described in Units. This column may appear anywhere in the file.\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/common-principles.html#units\" #>   } #> } #>  #> $content: #>                                     filename                  acq_time #>                                       <char>                <nanotime> #> 1: func/sub-control01_task-nback_bold.nii.gz 1877-06-15T13:45:30+00:00  # save to tsv tsv <- file.path(tempdir(), \"scans.tsv\") paths <- tabular$save(tsv)  print(paths) #> $table_path #> /tmp/RtmplhxG4L/scans.tsv #>  #> $sidecar_path #> /tmp/RtmplhxG4L/scans.json #>    # use base R to read read.table(tsv, header = TRUE, na.strings = \"n/a\") #>                                    filename                    acq_time #> 1 func/sub-control01_task-nback_bold.nii.gz 1877-06-15T13:45:30.000000Z  # get sidecar cat(readLines(paths$sidecar_path), sep = \"\\n\") #> { #>   \"filename\": { #>     \"LongName\": \"Filename\", #>     \"Description\": \"[Required, string] Relative paths to files. There MUST be exactly one row for each file. Values in filename MUST be unique. This column must appear first in the file.\" #>   }, #>   \"acq_time\": { #>     \"LongName\": \"Acquisition Time\", #>     \"Description\": \"[Optional, string] Acquisition time refers to when the first data point in each run was acquired. Furthermore, if this header is provided, the acquisition times of all files from the same recording MUST be identical. Datetime format and their deidentification are described in Units. This column may appear anywhere in the file.\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/common-principles.html#units\" #>   } #> } #>    # clean up unlink(tsv) unlink(paths$sidecar_path)"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_sessions.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' sessions table class — bids_tabular_sessions","title":"'BIDS' sessions table class — bids_tabular_sessions","text":"tabular containing list sessions metadata. class child class bids_tabular, hence see methods . original specification https://bids-specification.readthedocs.io/en/stable/modality-agnostic-files.html#sessions-file.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_sessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' sessions table class — bids_tabular_sessions","text":"","code":"bids_tabular_sessions(content, meta = NULL)"},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_sessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' sessions table class — bids_tabular_sessions","text":"content, meta see bids_tabular","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_sessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' sessions table class — bids_tabular_sessions","text":"bids_tabular_sessions instance inheriting bids_tabular.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_tabular_sessions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' sessions table class — bids_tabular_sessions","text":"","code":"# basic tabular <- bids_tabular_sessions(data.frame(   session_id = c(\"ses-predrug\", \"ses-postdrug\", \"ses-followup\"),   acq_time = c(     \"2009-06-15T13:45:30\",     \"2009-06-16T13:45:30\",     \"2009-06-17T13:45:30\"   ),   systolic_blood_pressure = c(120, 100, 110) )) tabular #> <BIDS Tabular>[bids_tabular_sessions] #> $meta: #> { #>   \"session_id\": { #>     \"LongName\": \"Session ID\", #>     \"Description\": \"[Required, string] A session identifier of the form ses-<label>, matching a session found in the dataset. There MUST be exactly one row for each session. Values in session_id MUST be unique. This column must appear first in the file.\" #>   }, #>   \"acq_time\": { #>     \"LongName\": \"Acquisition Time\", #>     \"Description\": \"[Optional, string] Acquisition time refers to when the first data point of the first run was acquired. Datetime format and their deidentification are described in Units. This column may appear anywhere in the file.\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/common-principles.html#units\" #>   }, #>   \"pathology\": { #>     \"LongName\": \"Pathology\", #>     \"Description\": \"[Recommended, string or number] String value describing the pathology of the sample or type of control. When different from healthy, pathology SHOULD be specified. The pathology may be specified in either samples.tsv or sessions.tsv, depending on whether the pathology changes over time. This column may appear anywhere in the file.\" #>   } #> } #>  #> $content: #>      session_id                  acq_time systolic_blood_pressure #>          <char>                <nanotime>                   <num> #> 1:  ses-predrug 2009-06-15T13:45:30+00:00                     120 #> 2: ses-postdrug 2009-06-16T13:45:30+00:00                     100 #> 3: ses-followup 2009-06-17T13:45:30+00:00                     110   # convert existing tabular tabular <- bids_tabular(   data.frame(     acq_time = \"2009-06-15T13:45:30\",     session_id = \"ses-predrug\",     systolic_blood_pressure = 120   ) ) tabular <- as_bids_tabular(tabular, cls = bids_tabular_sessions) tabular #> <BIDS Tabular>[bids_tabular_sessions] #> $meta: #> { #>   \"acq_time\": { #>     \"LongName\": \"Acquisition Time\", #>     \"Description\": \"[Optional, string] Acquisition time refers to when the first data point of the first run was acquired. Datetime format and their deidentification are described in Units. This column may appear anywhere in the file.\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/common-principles.html#units\" #>   }, #>   \"session_id\": { #>     \"LongName\": \"Session ID\", #>     \"Description\": \"[Required, string] A session identifier of the form ses-<label>, matching a session found in the dataset. There MUST be exactly one row for each session. Values in session_id MUST be unique. This column must appear first in the file.\" #>   }, #>   \"pathology\": { #>     \"LongName\": \"Pathology\", #>     \"Description\": \"[Recommended, string or number] String value describing the pathology of the sample or type of control. When different from healthy, pathology SHOULD be specified. The pathology may be specified in either samples.tsv or sessions.tsv, depending on whether the pathology changes over time. This column may appear anywhere in the file.\" #>   } #> } #>  #> $content: #>     session_id                  acq_time systolic_blood_pressure #>         <char>                <nanotime>                   <num> #> 1: ses-predrug 2009-06-15T13:45:30+00:00                     120   # save to tsv tsv <- file.path(tempdir(), \"sessions.tsv\") paths <- tabular$save(tsv)  print(paths) #> $table_path #> /tmp/RtmplhxG4L/sessions.tsv #>  #> $sidecar_path #> /tmp/RtmplhxG4L/sessions.json #>    # use base R to read read.table(tsv, header = TRUE, na.strings = \"n/a\") #>    session_id                    acq_time systolic_blood_pressure #> 1 ses-predrug 2009-06-15T13:45:30.000000Z                     120  # get sidecar cat(readLines(paths$sidecar_path), sep = \"\\n\") #> { #>   \"session_id\": { #>     \"LongName\": \"Session ID\", #>     \"Description\": \"[Required, string] A session identifier of the form ses-<label>, matching a session found in the dataset. There MUST be exactly one row for each session. Values in session_id MUST be unique. This column must appear first in the file.\" #>   }, #>   \"acq_time\": { #>     \"LongName\": \"Acquisition Time\", #>     \"Description\": \"[Optional, string] Acquisition time refers to when the first data point of the first run was acquired. Datetime format and their deidentification are described in Units. This column may appear anywhere in the file.\", #>     \"TermURL\": \"https://bids-specification.readthedocs.io/en/stable/common-principles.html#units\" #>   } #> } #>    # clean up unlink(tsv) unlink(paths$sidecar_path)"},{"path":"http://dipterix.org/bidsr/reference/bids_uri.html","id":null,"dir":"Reference","previous_headings":"","what":"'BIDS' uniform resource indicator ('URI') class definition — bids_uri","title":"'BIDS' uniform resource indicator ('URI') class definition — bids_uri","text":"'BIDS' uniform resource indicator ('URI') class definition","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_uri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'BIDS' uniform resource indicator ('URI') class definition — bids_uri","text":"","code":"bids_uri(uri)"},{"path":"http://dipterix.org/bidsr/reference/bids_uri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'BIDS' uniform resource indicator ('URI') class definition — bids_uri","text":"uri 'URI' string another 'BIDS-URI' object","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_uri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'BIDS' uniform resource indicator ('URI') class definition — bids_uri","text":"bids_uri instance.","code":""},{"path":"http://dipterix.org/bidsr/reference/bids_uri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'BIDS' uniform resource indicator ('URI') class definition — bids_uri","text":"","code":"# basic properties uri <- bids_uri(\"bids::sub-01/fmap/sub-01_dir-AP_epi.nii.gz\") uri #> bids::sub-01/fmap/sub-01_dir-AP_epi.nii.gz uri$relative_path #> [1] \"sub-01/fmap/sub-01_dir-AP_epi.nii.gz\" uri$dataset_name #> [1] \"\"  # set the entire uri uri$format <- \"bids:deriv1:sub-02/anat/sub-02_T1w.nii.gz\" uri #> bids:deriv1:sub-02/anat/sub-02_T1w.nii.gz  # resolve BIDS URI (partial support)   # resolving a BIDS URI requires dataset_description.json data_description <- dataset_description <- as_bids_dataset_description(   parent_directory = \"/path/to/BIDS/folder\",   Name = \"A dummy experiments\",   BIDSVersion = \"1.6.0\",    DatasetLinks = list(     \"deriv1\" = \"derivatives/derivative1\",     \"phantoms\" = \"file:///data/phantoms\"   ) )  uri <- bids_uri(\"bids::sub-01/fmap/sub-01_dir-AP_epi.nii.gz\") resolved <- uri$resolve(data_description)  # `raw_resolution` is relative to the parent directory where # `dataset_description.json` is stored resolved$raw_resolution #> [1] \"sub-01/fmap/sub-01_dir-AP_epi.nii.gz\" resolved$absolute_path #> /path/to/BIDS/folder/sub-01/fmap/sub-01_dir-AP_epi.nii.gz  uri <- bids_uri(\"bids:deriv1:sub-02/anat/sub-02_T1w.nii.gz\") resolved <- uri$resolve(data_description) resolved$raw_resolution #> derivatives/derivative1/sub-02/anat/sub-02_T1w.nii.gz resolved$absolute_path #> /path/to/BIDS/folder/derivatives/derivative1/sub-02/anat/sub-02_T1w.nii.gz"},{"path":"http://dipterix.org/bidsr/reference/bidsr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bidsr: A Brain Imaging Data Structure ('BIDS') Parser in R — bidsr-package","title":"bidsr: A Brain Imaging Data Structure ('BIDS') Parser in R — bidsr-package","text":"Read, parse, modify files comply brain imaging data structure ('BIDS') doi:10.1038/sdata.2016.44  R.","code":""},{"path":[]},{"path":"http://dipterix.org/bidsr/reference/bidsr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bidsr: A Brain Imaging Data Structure ('BIDS') Parser in R — bidsr-package","text":"Maintainer: Zhengjia Wang dipterix.wang@gmail.com (ORCID)","code":""},{"path":"http://dipterix.org/bidsr/reference/download_bids_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Download 'BIDS' example data-sets — download_bids_examples","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"See https://github.com/bids-standard/bids-examples full repository.","code":""},{"path":"http://dipterix.org/bidsr/reference/download_bids_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"","code":"download_bids_examples(test = FALSE)"},{"path":"http://dipterix.org/bidsr/reference/download_bids_examples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"test logical; default FALSE, downloads example repository files missing; alternative choice TRUE, return FALSE files missing","code":""},{"path":"http://dipterix.org/bidsr/reference/download_bids_examples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"local path example repository exists test=FALSE; simply FALSE repository missing test=TRUE.","code":""},{"path":"http://dipterix.org/bidsr/reference/download_bids_examples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download 'BIDS' example data-sets — download_bids_examples","text":"","code":"download_bids_examples(test = TRUE) #> [1] FALSE"},{"path":"http://dipterix.org/bidsr/reference/new_bids_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new bidsr class definition — new_bids_class","title":"Create new bidsr class definition — new_bids_class","text":"default, generated classes inherit bids_class_base, provides S3 generics","code":""},{"path":"http://dipterix.org/bidsr/reference/new_bids_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new bidsr class definition — new_bids_class","text":"","code":"new_bids_class(   name,   parent = bids_class_base,   abstract = FALSE,   hidden_names = NULL,   properties = NULL,   methods = NULL,   validator = NULL,   constructor = NULL )"},{"path":"http://dipterix.org/bidsr/reference/new_bids_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new bidsr class definition — new_bids_class","text":"name string, required, name class parent parent class definition, needs 'S7' class abstract whether class abstract (TRUE) (FALSE) hidden_names vector string, names properties /methods whose presence hidden users; affect `$` operator, names function. hidden properties methods queried via two ways. However, properties can still accessible via `@` operator properties named list names property names can queried via `$` `@` operators methods read-methods class, format print; method function, arguments start self (instance method) cls (class method). cases, changes made object carrier method function exits. changes properties, use setter functions property. validator validate function; see new_class constructor function custom constructor; see parameter 'constructor' new_class details. Basically custom constructor call S7::new_object() create 'S7' object. first argument instance parent class (used). subsequent arguments used set properties.","code":""},{"path":"http://dipterix.org/bidsr/reference/new_bids_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new bidsr class definition — new_bids_class","text":"","code":"# ---- hide properties and attributes ------------------------- cls <- new_bids_class(   name = \"my_class\",   properties = list(     str = bids_property_character(       name = \"str\", type = \"required\"),     hidden_prop = bids_property_character(\"hidden_prop\")   ),   methods = list(     # read-only methods     format = function(self, ...) {       sprintf(\"my_class@str -> %s\", self$str)     },     hidden_method = function(self) {       \"Nonononono\"     }   ),   hidden_names = c(\"hidden_method\", \"hidden_prop\") )  x <- cls(str = \"a\") x #> my_class@str -> a  # hidden names will not be displayed names(x) #> [1] \"str\"    \"format\" as.list(x) #> $str #> [1] \"a\" #>   # however, then can still be queried x$hidden_prop #> character(0) x$hidden_method() #> [1] \"Nonononono\""},{"path":"http://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"Low-level function generate file name definitions entity constraints; use parse_path_bids_entity instead. specification https://bids-specification.readthedocs.io/en/stable/common-principles.html#filenames. bulk generating registering 'BIDS' file classes, see bids_entity_file_registry","code":""},{"path":"http://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"","code":"new_bids_entity_file_class(   name,   data_type,   suffix,   entity_rules = list(),   description = character() )"},{"path":"http://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"name class name data_type 'BIDS' file data type suffix file suffix entity_rules named list, keys 'BIDS' entity key (see bids_entity) corresponding value character vector length 0, 1, 2, containing rules entity; see Examples' description file class description","code":""},{"path":"http://dipterix.org/bidsr/reference/new_bids_entity_file_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class generator for 'BIDS' file class with entities — new_bids_entity_file_class","text":"","code":"# see full table at BIDS specification # en/stable/appendices/entity-table.html#behavioral-data # # generate class definition for \"Behavioral Data\" # Entity: Subject Session Task Acquisition Run Recording # Format: #   sub-<label> ses-<label> task-<label> #   acq-<label> run-<index> recording-<label> # suffix: events # requirement: REQUIRED OPTIONAL REQUIRED OPTIONAL OPTIONAL #  behavior_event_file_def <- new_bids_entity_file_class(   name = \"bids_entity_file_beh_events\",   data_type = \"beh\",   suffix = \"events\",   entity_rules = list(     sub = c(\"required\", \"label\"),     ses = c(\"optional\", \"label\"),     task = c(\"required\", \"label\"),     acq = c(\"optional\", \"label\"),     run = c(\"optional\", \"index\"),     recording = c(\"optional\", \"label\")   ),   description = \"Event timing information from a behavioral task.\" )  file1 <- behavior_event_file_def(   parent_directory = \"sub-001/beh\",   sub = \"001\", task = \"test\", .extension = \"tsv\")  print(file1) #> sub-001/beh/sub-001_task-test_events.tsv  file.path(\"root/to/path\", file1) #> [1] \"root/to/path/sub-001/beh/sub-001_task-test_events.tsv\"  # get entity values file1$get_entity(\"task\") #> [1] \"test\"  # parent directory file1$parent_directory #> [1] \"sub-001/beh\"  file1$entities$run$value #> integer(0)  # set entity values file1$entities$run <- 2 file1$entities$blahblah <- \"haha\"  # also set format for index entities file1$entities$run$index_format <- \"%03d\" file1 #> sub-001/beh/sub-001_task-test_run-002_blahblah-haha_events.tsv"},{"path":"http://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse 'BIDS' entities from file path — parse_path_bids_entity","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"Parse 'BIDS' entities file path","code":""},{"path":"http://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"","code":"parse_path_bids_entity(path, auto_new = TRUE)"},{"path":"http://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"path path entity file, recommended input absolute path relative path 'BIDS' root directory auto_new whether automatically generate class definition missing; default true","code":""},{"path":"http://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"'bids_entity_file' instance.","code":""},{"path":"http://dipterix.org/bidsr/reference/parse_path_bids_entity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse 'BIDS' entities from file path — parse_path_bids_entity","text":"","code":"path <- \"anat/sub-01_chunk-001_t1w.nii.gz\"  # --- parse ------------------------------------------------ parsed_filename <- parse_path_bids_entity(path) parsed_filename #> anat/sub-01_chunk-001_T1w.nii.gz  parsed_filename$get_entity(\"sub\") #> [1] \"01\"  # alternatively parsed_filename$entities$sub$value #> [1] \"01\"  # data type is `anat` imaging parsed_filename$data_type #> [1] \"anat\"  # data is T1-weighted parsed_filename$suffix #> [1] \"T1w\"  # --- usage ------------------------------------------------ # use it as character file.path(\"/path/to/bids/dir/sub-01\", parsed_filename) #> [1] \"/path/to/bids/dir/sub-01/anat/sub-01_chunk-001_T1w.nii.gz\"  # modify parsed_filename$entities$task <- \"special\"  # new file path: anat/sub-01_task-special_chunk-001_T1w.nii.gz parsed_filename #> anat/sub-01_task-special_chunk-001_T1w.nii.gz  # ---- schema ----------------------------------------------- # get BIDS entity rules parsed_filename$get_entity_rules() #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"optional\" \"label\"    #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $ce #> [1] \"optional\" \"label\"    #>  #> $rec #> [1] \"prohibited\" \"label\"      #>  #> $dir #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"prohibited\" \"index\"      #>  #> $mod #> [1] \"optional\" \"label\"    #>  #> $echo #> [1] \"prohibited\" \"index\"      #>  #> $flip #> [1] \"prohibited\" \"index\"      #>  #> $inv #> [1] \"prohibited\" \"index\"      #>  #> $mt #> [1] \"prohibited\" \"label\"      #>  #> $part #> [1] \"optional\" \"label\"    #>  #> $recording #> [1] \"prohibited\" \"label\"      #>  #> $chunk #> [1] \"optional\" \"index\"    #>   # get class definition definition <- S7::S7_class(parsed_filename)  # get entity rules from class definition$get_entity_rules() #> $sub #> [1] \"required\" \"label\"    #>  #> $ses #> [1] \"optional\" \"label\"    #>  #> $task #> [1] \"optional\" \"label\"    #>  #> $acq #> [1] \"optional\" \"label\"    #>  #> $ce #> [1] \"optional\" \"label\"    #>  #> $rec #> [1] \"prohibited\" \"label\"      #>  #> $dir #> [1] \"optional\" \"label\"    #>  #> $run #> [1] \"prohibited\" \"index\"      #>  #> $mod #> [1] \"optional\" \"label\"    #>  #> $echo #> [1] \"prohibited\" \"index\"      #>  #> $flip #> [1] \"prohibited\" \"index\"      #>  #> $inv #> [1] \"prohibited\" \"index\"      #>  #> $mt #> [1] \"prohibited\" \"label\"      #>  #> $part #> [1] \"optional\" \"label\"    #>  #> $recording #> [1] \"prohibited\" \"label\"      #>  #> $chunk #> [1] \"optional\" \"index\"    #>"},{"path":"http://dipterix.org/bidsr/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. S7 set_props, valid_eventually","code":""}]
